{
  "decls" : [
    "type Symbol {\n  Description : String | Undefined;\n}",
    "type GlobalSymbolRegistryRecord {\n  Key : String;\n  Symbol : Record[Symbol];\n}",
    "type CompletionRecord {\n  Type : Enum[~normal~, ~break~, ~continue~, ~return~, ~throw~];\n  Value : Any;\n  Target : String | Enum[~empty~];\n}",
    "type NormalCompletion extends CompletionRecord {\n  Type : Enum[~normal~];\n  Value : Any;\n  Target : Enum[~empty~];\n}",
    "type AbruptCompletion extends CompletionRecord {\n  Type : Enum[~break~, ~continue~, ~return~, ~throw~];\n  Value : ESValue | Enum[~empty~];\n  Target : String | Enum[~empty~];\n}",
    "type BreakCompletion extends AbruptCompletion {\n  Type : Enum[~break~];\n  Value : Enum[~empty~];\n  Target : String | Enum[~empty~];\n}",
    "type ContinueCompletion extends AbruptCompletion {\n  Type : Enum[~continue~];\n  Value : Enum[~empty~];\n  Target : String | Enum[~empty~];\n}",
    "type ReturnCompletion extends AbruptCompletion {\n  Type : Enum[~return~];\n  Value : ESValue;\n  Target : Enum[~empty~];\n}",
    "type ThrowCompletion extends AbruptCompletion {\n  Type : Enum[~throw~];\n  Value : ESValue;\n  Target : Enum[~empty~];\n}",
    "type ReferenceRecord {\n  Base : ESValue | Record[EnvironmentRecord] | Enum[~unresolvable~];\n  ReferencedName : ESValue | Record[PrivateName];\n  Strict : Boolean;\n  ThisValue : ESValue | Enum[~empty~];\n}",
    "type IdentifierReferenceRecord extends ReferenceRecord {\n  Base : Record[EnvironmentRecord];\n  ReferencedName : String;\n}",
    "type PropertyReferenceRecord extends ReferenceRecord {\n  Base : ESValue;\n}",
    "type UnresolvableReferenceRecord extends ReferenceRecord {\n  Base : Enum[~unresolvable~];\n  ReferencedName : String;\n}",
    "type PrivateReferenceRecord extends ReferenceRecord {\n  ReferencedName : Record[PrivateName];\n}",
    "type SuperReferenceRecord extends ReferenceRecord {\n  Base : ESValue;\n  ThisValue : ESValue;\n}",
    "type PrivateName {\n  Description : String;\n}",
    "type PropertyDescriptor {\n  Value? : ESValue;\n  Writable? : Boolean;\n  Get? : Record[Object] | Undefined;\n  Set? : Record[Object] | Undefined;\n  Enumerable? : Boolean;\n  Configurable? : Boolean;\n}",
    "type PrivateElement {\n  Key : Record[PrivateName];\n  Kind : Enum[~field~, ~method~, ~accessor~];\n  Value? : ESValue;\n  Get? : Record[FunctionObject] | Undefined;\n  Set? : Record[FunctionObject] | Undefined;\n}",
    "type ClassFieldDefinitionRecord {\n  Name : Record[PrivateName | Symbol] | String;\n  Initializer : Record[ECMAScriptFunctionObject] | Enum[~empty~];\n}",
    "type ClassStaticBlockDefinitionRecord {\n  BodyFunction : Record[FunctionObject];\n}",
    "type EnvironmentRecord {\n  abstract def HasBinding;\n  abstract def CreateMutableBinding;\n  abstract def CreateImmutableBinding;\n  abstract def InitializeBinding;\n  abstract def SetMutableBinding;\n  abstract def GetBindingValue;\n  abstract def DeleteBinding;\n  abstract def HasThisBinding;\n  abstract def HasSuperBinding;\n  abstract def WithBaseObject;\n  OuterEnv : Record[EnvironmentRecord] | Null;\n  __MAP__ : Map[String -> Record[Binding]];\n}",
    "type DeclarativeEnvironmentRecord extends EnvironmentRecord {\n  def CreateImmutableBinding;\n  def CreateMutableBinding;\n  def DeleteBinding;\n  def GetBindingValue;\n  def HasBinding;\n  def HasSuperBinding;\n  def HasThisBinding;\n  def InitializeBinding;\n  def SetMutableBinding;\n  def WithBaseObject;\n}",
    "type ObjectEnvironmentRecord extends EnvironmentRecord {\n  def CreateMutableBinding;\n  def DeleteBinding;\n  def GetBindingValue;\n  def HasBinding;\n  def HasSuperBinding;\n  def HasThisBinding;\n  def InitializeBinding;\n  def SetMutableBinding;\n  def WithBaseObject;\n  BindingObject : Record[Object];\n  IsWithEnvironment : Boolean;\n}",
    "type FunctionEnvironmentRecord extends DeclarativeEnvironmentRecord {\n  def GetThisBinding;\n  def HasSuperBinding;\n  def HasThisBinding;\n  FunctionObject : Record[ECMAScriptFunctionObject];\n  NewTarget : Record[Object] | Undefined;\n  ThisBindingStatus : Enum[~initialized~, ~lexical~, ~uninitialized~];\n  ThisValue : ESValue;\n}",
    "type GlobalEnvironmentRecord extends EnvironmentRecord {\n  def CreateImmutableBinding;\n  def CreateMutableBinding;\n  def DeleteBinding;\n  def GetBindingValue;\n  def GetThisBinding;\n  def HasBinding;\n  def HasSuperBinding;\n  def HasThisBinding;\n  def InitializeBinding;\n  def SetMutableBinding;\n  def WithBaseObject;\n  DeclarativeRecord : Record[DeclarativeEnvironmentRecord];\n  GlobalThisValue : Record[Object];\n  ObjectRecord : Record[ObjectEnvironmentRecord];\n}",
    "type ModuleEnvironmentRecord extends DeclarativeEnvironmentRecord {\n  def CreateImportBinding;\n  def GetBindingValue;\n  def GetThisBinding;\n  def HasThisBinding;\n}",
    "type Binding {\n  BoundValue : ESValue;\n  initialized : Boolean;\n  strict : Boolean;\n  mutable : Boolean;\n}",
    "type ImmutableBinding extends Binding {\n  strict : Boolean;\n  mutable : False;\n}",
    "type MutableBinding extends Binding {\n  strict : False;\n  mutable : True;\n}",
    "type Object {\n  abstract def GetPrototypeOf;\n  abstract def SetPrototypeOf;\n  abstract def IsExtensible;\n  abstract def PreventExtensions;\n  abstract def GetOwnProperty;\n  abstract def DefineOwnProperty;\n  abstract def HasProperty;\n  abstract def Get;\n  abstract def Set;\n  abstract def Delete;\n  abstract def OwnPropertyKeys;\n  Prototype? : Record[Object] | Null;\n  Extensible? : Boolean;\n  PrivateElements : List[Record[PrivateElement]];\n  __MAP__ : Map[Record[Symbol] | String -> Record[PropertyDescriptor]];\n}",
    "type FunctionObject = Object {\n  Call : Any;\n}",
    "type Constructor = FunctionObject {\n  Construct : Any;\n}",
    "type OrdinaryObject extends Object {\n  def GetPrototypeOf;\n  def SetPrototypeOf;\n  def IsExtensible;\n  def PreventExtensions;\n  def GetOwnProperty;\n  def DefineOwnProperty;\n  def HasProperty;\n  def Get;\n  def Set;\n  def Delete;\n  def OwnPropertyKeys;\n  Prototype : Record[Object] | Null;\n  Extensible : Boolean;\n  ParameterMap? : Record[Object] | Undefined;\n}",
    "type ECMAScriptFunctionObject extends OrdinaryObject {\n  def Call;\n  def Construct?;\n  Environment : Record[EnvironmentRecord];\n  PrivateEnvironment : Record[PrivateEnvironmentRecord] | Null;\n  FormalParameters : Ast;\n  ECMAScriptCode : Ast;\n  ConstructorKind? : Enum[~base~, ~derived~];\n  Realm : Record[RealmRecord];\n  ScriptOrModule : Record[ModuleRecord | ScriptRecord] | Null;\n  ThisMode : Enum[~global~, ~lexical~, ~strict~];\n  Strict : Boolean;\n  HomeObject : Record[Object] | Undefined;\n  SourceText : String;\n  Fields : List[Record[ClassFieldDefinitionRecord]];\n  PrivateMethods : List[Record[PrivateElement]];\n  ClassFieldInitializerName : Record[PrivateName | Symbol] | Enum[~empty~] | String;\n  IsClassConstructor : Boolean;\n}",
    "type BuiltinFunctionObject extends OrdinaryObject {\n  def Call;\n  def Construct?;\n  Realm : Record[RealmRecord];\n  InitialName : String | Null;\n  __CODE__ : Clo[(ESValue, List[ESValue], Record[Constructor] | Undefined) => Normal[ESValue] | Throw];\n}",
    "type PromiseAllResolveElementFunction extends BuiltinFunctionObject {\n  Index : Int[0+];\n  Values : List[ESValue];\n  Capability : Record[PromiseCapabilityRecord];\n  RemainingElements : Record[{ Value: Int }];\n  AlreadyCalled : Boolean;\n}",
    "type ExoticObject extends Object {\n  Prototype? : Record[Object] | Null;\n}",
    "type BoundFunctionExoticObject extends ExoticObject {\n  def GetPrototypeOf = Record[OrdinaryObject].GetPrototypeOf;\n  def SetPrototypeOf = Record[OrdinaryObject].SetPrototypeOf;\n  def IsExtensible = Record[OrdinaryObject].IsExtensible;\n  def PreventExtensions = Record[OrdinaryObject].PreventExtensions;\n  def GetOwnProperty = Record[OrdinaryObject].GetOwnProperty;\n  def DefineOwnProperty = Record[OrdinaryObject].DefineOwnProperty;\n  def HasProperty = Record[OrdinaryObject].HasProperty;\n  def Get = Record[OrdinaryObject].Get;\n  def Set = Record[OrdinaryObject].Set;\n  def Delete = Record[OrdinaryObject].Delete;\n  def OwnPropertyKeys = Record[OrdinaryObject].OwnPropertyKeys;\n  def Call;\n  def Construct?;\n  BoundTargetFunction : Record[FunctionObject];\n  BoundThis : ESValue;\n  BoundArguments : List[ESValue];\n}",
    "type Array extends ExoticObject {\n  def GetPrototypeOf = Record[OrdinaryObject].GetPrototypeOf;\n  def SetPrototypeOf = Record[OrdinaryObject].SetPrototypeOf;\n  def IsExtensible = Record[OrdinaryObject].IsExtensible;\n  def PreventExtensions = Record[OrdinaryObject].PreventExtensions;\n  def GetOwnProperty = Record[OrdinaryObject].GetOwnProperty;\n  def DefineOwnProperty;\n  def HasProperty = Record[OrdinaryObject].HasProperty;\n  def Get = Record[OrdinaryObject].Get;\n  def Set = Record[OrdinaryObject].Set;\n  def Delete = Record[OrdinaryObject].Delete;\n  def OwnPropertyKeys = Record[OrdinaryObject].OwnPropertyKeys;\n  Prototype : Record[Object];\n}",
    "type StringExoticObject extends ExoticObject {\n  def GetPrototypeOf = Record[OrdinaryObject].GetPrototypeOf;\n  def SetPrototypeOf = Record[OrdinaryObject].SetPrototypeOf;\n  def IsExtensible = Record[OrdinaryObject].IsExtensible;\n  def PreventExtensions = Record[OrdinaryObject].PreventExtensions;\n  def GetOwnProperty;\n  def DefineOwnProperty;\n  def HasProperty = Record[OrdinaryObject].HasProperty;\n  def Get = Record[OrdinaryObject].Get;\n  def Set = Record[OrdinaryObject].Set;\n  def Delete = Record[OrdinaryObject].Delete;\n  def OwnPropertyKeys;\n  StringData : String;\n}",
    "type ArgumentsExoticObject extends ExoticObject {\n  def GetPrototypeOf = Record[OrdinaryObject].GetPrototypeOf;\n  def SetPrototypeOf = Record[OrdinaryObject].SetPrototypeOf;\n  def IsExtensible = Record[OrdinaryObject].IsExtensible;\n  def PreventExtensions = Record[OrdinaryObject].PreventExtensions;\n  def GetOwnProperty;\n  def DefineOwnProperty;\n  def HasProperty = Record[OrdinaryObject].HasProperty;\n  def Get;\n  def Set;\n  def Delete;\n  def OwnPropertyKeys = Record[OrdinaryObject].OwnPropertyKeys;\n  ParameterMap : Record[Object];\n}",
    "type ArrayIteratorInstance extends OrdinaryObject {\n  IteratedArrayLike : Record[Object] | Undefined;\n  ArrayLikeNextIndex : Int[0+];\n  ArrayLikeIterationKind : Enum[~key+value~] | Enum[~key~] | Enum[~value~];\n}",
    "type TypedArray extends ExoticObject {\n  def GetPrototypeOf = Record[OrdinaryObject].GetPrototypeOf;\n  def SetPrototypeOf = Record[OrdinaryObject].SetPrototypeOf;\n  def IsExtensible = Record[OrdinaryObject].IsExtensible;\n  def PreventExtensions = Record[OrdinaryObject].PreventExtensions;\n  def GetOwnProperty;\n  def DefineOwnProperty;\n  def HasProperty;\n  def Get;\n  def Set;\n  def Delete;\n  def OwnPropertyKeys;\n  ViewedArrayBuffer : Record[ArrayBuffer | SharedArrayBuffer];\n  ArrayLength : Int[0+] | Enum[~auto~];\n  ByteOffset : Int[0+];\n  ContentType : Enum[~bigint~, ~number~];\n  TypedArrayName : String;\n  ByteLength : Int[0+] | Enum[~auto~];\n}",
    "type ModuleNamespaceExoticObject extends ExoticObject {\n  def GetPrototypeOf;\n  def SetPrototypeOf;\n  def IsExtensible;\n  def PreventExtensions;\n  def GetOwnProperty;\n  def DefineOwnProperty;\n  def HasProperty;\n  def Get;\n  def Set;\n  def Delete;\n  def OwnPropertyKeys;\n  Module : Record[ModuleRecord];\n  Exports : List[String];\n}",
    "type ImmutablePrototypeExoticObject extends ExoticObject {\n  def GetPrototypeOf = Record[OrdinaryObject].GetPrototypeOf;\n  def SetPrototypeOf;\n  def IsExtensible = Record[OrdinaryObject].IsExtensible;\n  def PreventExtensions = Record[OrdinaryObject].PreventExtensions;\n  def GetOwnProperty = Record[OrdinaryObject].GetOwnProperty;\n  def DefineOwnProperty = Record[OrdinaryObject].DefineOwnProperty;\n  def HasProperty = Record[OrdinaryObject].HasProperty;\n  def Get = Record[OrdinaryObject].Get;\n  def Set = Record[OrdinaryObject].Set;\n  def Delete = Record[OrdinaryObject].Delete;\n  def OwnPropertyKeys = Record[OrdinaryObject].OwnPropertyKeys;\n}",
    "type ProxyExoticObject extends ExoticObject {\n  def GetPrototypeOf;\n  def SetPrototypeOf;\n  def IsExtensible;\n  def PreventExtensions;\n  def GetOwnProperty;\n  def DefineOwnProperty;\n  def HasProperty;\n  def Get;\n  def Set;\n  def Delete;\n  def OwnPropertyKeys;\n  def Call?;\n  def Construct?;\n  ProxyHandler : Record[Object] | Null;\n  ProxyTarget : Record[Object] | Null;\n}",
    "type RealmRecord {\n  AgentSignifier : Record[AgentSignifier];\n  Intrinsics : Map[String -> Record[Object]];\n  GlobalObject : Record[Object];\n  GlobalEnv : Record[GlobalEnvironmentRecord];\n  TemplateMap : List[Record[{ Site: Ast[TemplateLiteral], Array: Record[Array] }]];\n  LoadedModules : List[Record[{ Specifier: String, Module: Record[ModuleRecord] }]];\n  HostDefined : Undefined;\n}",
    "type ExecutionContext {\n  Function : Record[FunctionObject] | Null;\n  Realm : Record[RealmRecord];\n  ScriptOrModule : Record[ModuleRecord | ScriptRecord] | Null;\n  LexicalEnvironment? : Record[EnvironmentRecord];\n  VariableEnvironment? : Record[EnvironmentRecord];\n  PrivateEnvironment? : Record[PrivateEnvironmentRecord] | Null;\n  Generator? : Record[Generator | AsyncGenerator];\n}",
    "type ECMAScriptCodeExecutionContext extends ExecutionContext {\n  LexicalEnvironment : Record[EnvironmentRecord];\n  VariableEnvironment : Record[EnvironmentRecord];\n  PrivateEnvironment : Record[PrivateEnvironmentRecord] | Null;\n}",
    "type PrivateEnvironmentRecord {\n  OuterPrivateEnvironment : Record[PrivateEnvironmentRecord] | Null;\n  Names : List[Record[PrivateName]];\n}",
    "type GeneratorExecutionContext extends ExecutionContext {\n  Generator : Record[Generator | AsyncGenerator];\n}",
    "type JobRecord {\n  Job : Clo;\n  Realm : Record[RealmRecord];\n  ScriptOrModule : Record[ScriptRecord | ModuleRecord];\n}",
    "type JobCallbackRecord {\n  Callback : Record[FunctionObject];\n  HostDefined : Enum[~empty~];\n}",
    "type AgentRecord {\n  LittleEndian : Boolean;\n  CanBlock : Boolean;\n  Signifier : Record[AgentSignifier];\n  IsLockFree1 : Boolean;\n  IsLockFree2 : Boolean;\n  IsLockFree8 : Boolean;\n  CandidateExecution : Record[CandidateExecutionRecord];\n  KeptAlive : List[Record[Object | Symbol]];\n}",
    "type CandidateExecutionRecord {\n  EventsRecords : List[Record[AgentEventsRecord]];\n  ChosenValues : List[Record[ChosenValueRecord]];\n}",
    "type AgentEventsRecord {\n  AgentSignifier : Record[AgentSignifier];\n  EventList : List[Record[Event]];\n  AgentSynchronizesWith : List[List[Record[SynchronizeEvent]]];\n}",
    "type ChosenValueRecord {\n  Event : Record[SharedDataBlockEvent];\n  ChosenValue : List[Int];\n}",
    "type IteratorRecord {\n  Iterator : Record[Object];\n  NextMethod : ESValue;\n  Done : Boolean;\n}",
    "type ForInIterator extends OrdinaryObject {\n  Object : Record[Object];\n  ObjectWasVisited : Boolean;\n  VisitedKeys : List[String];\n  RemainingKeys : List[String];\n}",
    "type Iterator extends Object",
    "type ScriptRecord {\n  Realm : Record[RealmRecord];\n  ECMAScriptCode : Ast[Script];\n  LoadedModules : List[Record[{ Specifier: String, Module: Record[ModuleRecord] }]];\n  HostDefined : Enum[~empty~];\n}",
    "type ModuleRecord {\n  abstract def LoadRequestedModules;\n  abstract def GetExportedNames;\n  abstract def ResolveExport;\n  abstract def Link;\n  abstract def Evaluate;\n  Realm : Record[RealmRecord];\n  Environment : Record[ModuleEnvironmentRecord] | Enum[~empty~];\n  Namespace : Record[ModuleNamespaceExoticObject] | Enum[~empty~];\n  HostDefined : Undefined;\n}",
    "type ResolvedBindingRecord {\n  Module : Record[ModuleRecord];\n  BindingName : String | Enum[~namespace~];\n}",
    "type CyclicModuleRecord extends ModuleRecord {\n  def LoadRequestedModules;\n  def Link;\n  def Evaluate;\n  abstract def InitializeEnvironment;\n  abstract def ExecuteModule;\n  Status : Enum[~evaluated~, ~evaluating-async~, ~evaluating~, ~linked~, ~linking~, ~unlinked~];\n  EvaluationError : Abrupt[throw] | Enum[~empty~];\n  DFSIndex : Enum[~empty~] | Int;\n  DFSAncestorIndex : Enum[~empty~] | Int;\n  RequestedModules : List[String];\n  LoadedModules : List[Record[{ Specifier: String, Module: Record[ModuleRecordN] }]];\n  CycleRoot : Record[CyclicModuleRecord] | Enum[~empty~];\n  HasTLA : Boolean;\n  AsyncEvaluation : Boolean;\n  TopLevelCapability : Record[PromiseCapabilityRecord] | Enum[~empty~];\n  AsyncParentModules : List[Record[CyclicModuleRecord]];\n  PendingAsyncDependencies : Enum[~empty~] | Int;\n}",
    "type GraphLoadingStateRecord {\n  PromiseCapability : Record[PromiseCapabilityRecord];\n  IsLoading : Boolean;\n  PendingModulesCount : Int[0+];\n  Visited : List[Record[CyclicModuleRecord]];\n  HostDefined : Enum[~empty~];\n}",
    "type SourceTextModuleRecord extends CyclicModuleRecord {\n  def GetExportedNames;\n  def ResolveExport;\n  def InitializeEnvironment;\n  def ExecuteModule;\n  ECMAScriptCode : Ast[Module];\n  Context : Record[ExecutionContext];\n  ImportMeta : Record[Object] | Enum[~empty~];\n  ImportEntries : List[Record[ImportEntryRecord]];\n  LocalExportEntries : List[Record[ExportEntryRecord]];\n  IndirectExportEntries : List[Record[ExportEntryRecord]];\n  StarExportEntries : List[Record[ExportEntryRecord]];\n}",
    "type ResolvedBindingRecord {\n  Module : Record[ModuleRecord];\n  BindingName : String | Enum[~namespace~];\n}",
    "type ImportEntryRecord {\n  ModuleRequest : String;\n  ImportName : String | Enum[~namespace-object~];\n  LocalName : String;\n}",
    "type ExportEntryRecord {\n  ExportName : String | Null;\n  ModuleRequest : String | Null;\n  ImportName : String | Null | Enum[~all~, ~all-but-default~];\n  LocalName : String | Null;\n}",
    "type BooleanObject extends OrdinaryObject {\n  BooleanData : Boolean;\n}",
    "type SymbolObject extends OrdinaryObject {\n  SymbolData : Record[Symbol];\n}",
    "type ErrorObject extends OrdinaryObject {\n  ErrorData : Undefined;\n}",
    "type NumberObject extends OrdinaryObject {\n  NumberData : Number;\n}",
    "type BigIntObject extends OrdinaryObject {\n  BigIntData : BigInt;\n}",
    "type Date extends OrdinaryObject {\n  DateValue : NumberInt | NaN;\n}",
    "type RegExp extends OrdinaryObject {\n  RegExpMatcher : Clo;\n}",
    "type Map extends OrdinaryObject {\n  MapData : List[Record[{ Key: ESValue | Enum[~empty~], Value: ESValue }]];\n}",
    "type Set extends OrdinaryObject {\n  SetData : List[ESValue];\n}",
    "type WeakMap extends OrdinaryObject {\n  WeakMapData : List[Record[{ Key: ESValue | Enum[~empty~], Value: ESValue }]];\n}",
    "type WeakSet extends OrdinaryObject {\n  WeakSetData : List[ESValue];\n}",
    "type ArrayBuffer extends Object {\n  ArrayBufferData : Record[DataBlock] | Null;\n  ArrayBufferByteLength : Int[0+];\n  ArrayBufferDetachKey : ESValue;\n  ArrayBufferMaxByteLength? : Int[0+];\n}",
    "type SharedArrayBuffer extends Object {\n  ArrayBufferData : Record[SharedDataBlock] | Null;\n  ArrayBufferByteLength? : Int[0+];\n  ArrayBufferByteLengthData? : Record[SharedDataBlock];\n  ArrayBufferMaxByteLength? : Int[0+];\n}",
    "type DataView extends OrdinaryObject {\n  DataView : Undefined;\n  ViewedArrayBuffer : Record[ArrayBuffer | SharedArrayBuffer];\n  ByteLength : Int[0+] | Enum[~auto~];\n  ByteOffset : Int[0+];\n}",
    "type WeakRef extends OrdinaryObject {\n  WeakRefTarget : Record[Object | Symbol];\n}",
    "type FinalizationRegistry extends OrdinaryObject {\n  Realm : Record[RealmRecord];\n  Cells : List[Record[{ WeakRefTarget: Record[Object | Symbol], HeldValue: ESValue, UnregisterToken: Record[Object | Symbol] | Enum[~empty~] }]];\n  CleanupCallback : Record[JobCallbackRecord];\n}",
    "type AsyncFromSyncIterator extends OrdinaryObject {\n  SyncIteratorRecord : Record[IteratorRecord];\n}",
    "type Promise extends OrdinaryObject {\n  PromiseState : Enum[~pending~, ~fulfilled~, ~rejected~];\n  PromiseResult : ESValue;\n  PromiseFulfillReactions : List[Record[PromiseReactionRecord]];\n  PromiseRejectReactions : List[Record[PromiseReactionRecord]];\n  PromiseIsHandled : Boolean;\n}",
    "type Generator extends OrdinaryObject {\n  GeneratorState : Enum[~completed~, ~executing~, ~suspended-start~, ~suspended-yield~];\n  GeneratorContext : Record[ExecutionContext];\n  GeneratorBrand : String | Enum[~empty~];\n}",
    "type AsyncGenerator extends OrdinaryObject {\n  AsyncGeneratorState : Enum[~suspended-start~, ~suspended-yield~, ~executing~, ~draining-queue~, ~completed~];\n  AsyncGeneratorContext : Record[ExecutionContext];\n  AsyncGeneratorQueue : List[Record[AsyncGeneratorRequest]];\n  GeneratorBrand : String | Enum[~empty~];\n}",
    "type PromiseReactionRecord {\n  Capability : Record[PromiseCapabilityRecord] | Undefined;\n  Type : Enum[~fulfill~, ~reject~];\n  Handler : Record[JobCallbackRecord] | Enum[~empty~];\n}",
    "type PromiseCapabilityRecord {\n  Promise : Record[Promise];\n  Resolve : Record[FunctionObject];\n  Reject : Record[FunctionObject];\n}",
    "type AsyncGeneratorRequest {\n  Completion : Normal[ESValue] | Return | Throw;\n  Capability : Record[PromiseCapabilityRecord];\n}",
    "type MatchRecord {\n  StartIndex : Int[0+];\n  EndIndex : Int[0+];\n}",
    "type TypedArrayWithBufferWitnessRecord {\n  Object : Record[TypedArray];\n  CachedBufferByteLength : Int[0+] | Enum[~detached~];\n}",
    "type DataViewWithBufferWitnessRecord {\n  Object : Record[DataView];\n  CachedBufferByteLength : Int[0+] | Enum[~detached~];\n}"
  ]
}