{
  "table-reference-record-fields" : {
    "id" : "table-reference-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Base]]",
        "an ECMAScript language value, an Environment Record, or ~unresolvable~",
        "The value or Environment Record which holds the binding. A [[Base]] of ~unresolvable~ indicates that the binding could not be resolved."
      ],
      [
        "[[ReferencedName]]",
        "a String, a Symbol, or a Private Name",
        "The name of the binding. Always a String if [[Base]] value is an Environment Record."
      ],
      [
        "[[Strict]]",
        "a Boolean",
        "*true* if the Reference Record originated in strict mode code, *false* otherwise."
      ],
      [
        "[[ThisValue]]",
        "an ECMAScript language value or ~empty~",
        "If not ~empty~, the Reference Record represents a property binding that was expressed using the `super` keyword; it is called a Super Reference Record and its [[Base]] value will never be an Environment Record. In that case, the [[ThisValue]] field holds the *this* value at the time the Reference Record was created."
      ]
    ]
  },
  "table-iterator-interface-optional-properties" : {
    "id" : "table-iterator-interface-optional-properties",
    "header" : [
      "Property",
      "Value",
      "Requirements"
    ],
    "rows" : [
      [
        "*\"return\"*",
        "a function that returns an IteratorResult object",
        "The returned object must conform to the IteratorResult interface. Invoking this method notifies the Iterator object that the caller does not intend to make any more `next` method calls to the Iterator. The returned IteratorResult object will typically have a *\"done\"* property whose value is *true*, and a *\"value\"* property with the value passed as the argument of the `return` method. However, this requirement is not enforced."
      ],
      [
        "*\"throw\"*",
        "a function that returns an IteratorResult object",
        "The returned object must conform to the IteratorResult interface. Invoking this method notifies the Iterator object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to `throw` the value passed as the argument. If the method does not `throw`, the returned IteratorResult object will typically have a *\"done\"* property whose value is *true*."
      ]
    ]
  },
  "table-classfielddefinition-fields" : {
    "id" : "table-classfielddefinition-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Name]]",
        "a Private Name, a String, or a Symbol",
        "The name of the field."
      ],
      [
        "[[Initializer]]",
        "an ECMAScript function object or ~empty~",
        "The initializer of the field, if any."
      ]
    ]
  },
  "table-time-zone-offset-string-code-points" : {
    "id" : "table-time-zone-offset-string-code-points",
    "header" : [
      "Code Point",
      "Unicode Name",
      "Abbreviation"
    ],
    "rows" : [
      [
        "`U+2212`",
        "MINUS SIGN",
        "<MINUS>"
      ]
    ]
  },
  "table-rmwsharedmemory-fields" : {
    "id" : "table-rmwsharedmemory-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Order]]",
        "~seq-cst~",
        "Read-modify-write events are always sequentially consistent."
      ],
      [
        "[[NoTear]]",
        "*true*",
        "Read-modify-write events cannot tear."
      ],
      [
        "[[Block]]",
        "a Shared Data Block",
        "The block the event operates on."
      ],
      [
        "[[ByteIndex]]",
        "a non-negative integer",
        "The byte address of the read-modify-write in [[Block]]."
      ],
      [
        "[[ElementSize]]",
        "a non-negative integer",
        "The size of the read-modify-write."
      ],
      [
        "[[Payload]]",
        "a List of byte values",
        "The List of byte values to be passed to [[ModifyOp]]."
      ],
      [
        "[[ModifyOp]]",
        "a read-modify-write modification function",
        "An abstract closure that returns a modified List of byte values from a read List of byte values and [[Payload]]."
      ]
    ]
  },
  "table-chosen-value-records" : {
    "id" : "table-chosen-value-records",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Event]]",
        "a Shared Data Block event",
        "The ReadSharedMemory or ReadModifyWriteSharedMemory event that was introduced for this chosen value."
      ],
      [
        "[[ChosenValue]]",
        "a List of byte values",
        "The bytes that were nondeterministically chosen during evaluation."
      ]
    ]
  },
  "table-import-forms-mapping-to-importentry-records" : {
    "id" : "table-import-forms-mapping-to-importentry-records",
    "header" : [
      "Import Statement Form",
      "[[ModuleRequest]]",
      "[[ImportName]]",
      "[[LocalName]]"
    ],
    "rows" : [
      [
        "`import v from \"mod\";`",
        "*\"mod\"*",
        "*\"default\"*",
        "*\"v\"*"
      ],
      [
        "`import * as ns from \"mod\";`",
        "*\"mod\"*",
        "~namespace-object~",
        "*\"ns\"*"
      ],
      [
        "`import {x} from \"mod\";`",
        "*\"mod\"*",
        "*\"x\"*",
        "*\"x\"*"
      ],
      [
        "`import {x as v} from \"mod\";`",
        "*\"mod\"*",
        "*\"x\"*",
        "*\"v\"*"
      ],
      [
        "`import \"mod\";`",
        "An ImportEntry Record is not created."
      ]
    ]
  },
  "table-additional-fields-of-source-text-module-records" : {
    "id" : "table-additional-fields-of-source-text-module-records",
    "header" : [
      "Field Name",
      "Value Type",
      "Meaning"
    ],
    "rows" : [
      [
        "[[ECMAScriptCode]]",
        "a Parse Node",
        "The result of parsing the source text of this module using |Module| as the goal symbol."
      ],
      [
        "[[Context]]",
        "an ECMAScript code execution context or ~empty~",
        "The execution context associated with this module. It is ~empty~ until the module's environment has been initialized."
      ],
      [
        "[[ImportMeta]]",
        "an Object or ~empty~",
        "An object exposed through the `import.meta` meta property. It is ~empty~ until it is accessed by ECMAScript code."
      ],
      [
        "[[ImportEntries]]",
        "a List of ImportEntry Records",
        "A List of ImportEntry records derived from the code of this module."
      ],
      [
        "[[LocalExportEntries]]",
        "a List of ExportEntry Records",
        "A List of ExportEntry records derived from the code of this module that correspond to declarations that occur within the module."
      ],
      [
        "[[IndirectExportEntries]]",
        "a List of ExportEntry Records",
        "A List of ExportEntry records derived from the code of this module that correspond to reexported imports that occur within the module or exports from `export * as namespace` declarations."
      ],
      [
        "[[StarExportEntries]]",
        "a List of ExportEntry Records",
        "A List of ExportEntry records derived from the code of this module that correspond to `export *` declarations that occur within the module, not including `export * as namespace` declarations."
      ]
    ]
  },
  "table-privateelement-fields" : {
    "id" : "table-privateelement-fields",
    "header" : [
      "Field Name",
      "Values of the [[Kind]] field for which it is present",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Key]]",
        "All",
        "a Private Name",
        "The name of the field, method, or accessor."
      ],
      [
        "[[Kind]]",
        "All",
        "~field~, ~method~, or ~accessor~",
        "The kind of the element."
      ],
      [
        "[[Value]]",
        "~field~ and ~method~",
        "an ECMAScript language value",
        "The value of the field."
      ],
      [
        "[[Get]]",
        "~accessor~",
        "a function object or *undefined*",
        "The getter for a private accessor."
      ],
      [
        "[[Set]]",
        "~accessor~",
        "a function object or *undefined*",
        "The setter for a private accessor."
      ]
    ]
  },
  "table-module-record-fields" : {
    "id" : "table-module-record-fields",
    "header" : [
      "Field Name",
      "Value Type",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Realm]]",
        "a Realm Record",
        "The Realm within which this module was created."
      ],
      [
        "[[Environment]]",
        "a Module Environment Record or ~empty~",
        "The Environment Record containing the top level bindings for this module. This field is set when the module is linked."
      ],
      [
        "[[Namespace]]",
        "an Object or ~empty~",
        "The Module Namespace Object () if one has been created for this module."
      ],
      [
        "[[HostDefined]]",
        "anything (default value is *undefined*)",
        "Field reserved for use by host environments that need to associate additional information with a module."
      ]
    ]
  },
  "table-regexp-record-fields" : {
    "id" : "table-regexp-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[IgnoreCase]]",
        "a Boolean",
        "indicates whether *\"i\"* appears in the RegExp's flags"
      ],
      [
        "[[Multiline]]",
        "a Boolean",
        "indicates whether *\"m\"* appears in the RegExp's flags"
      ],
      [
        "[[DotAll]]",
        "a Boolean",
        "indicates whether *\"s\"* appears in the RegExp's flags"
      ],
      [
        "[[Unicode]]",
        "a Boolean",
        "indicates whether *\"u\"* appears in the RegExp's flags"
      ],
      [
        "[[UnicodeSets]]",
        "a Boolean",
        "indicates whether *\"v\"* appears in the RegExp's flags"
      ],
      [
        "[[CapturingGroupsCount]]",
        "a non-negative integer",
        "the number of left-capturing parentheses in the RegExp's pattern"
      ]
    ]
  },
  "table-waiterrecord" : {
    "id" : "table-waiterrecord",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[AgentSignifier]]",
        "an agent signifier",
        "The agent that called `Atomics.wait` or `Atomics.waitAsync`."
      ],
      [
        "[[PromiseCapability]]",
        "a PromiseCapability Record or ~blocking~",
        "If denoting a call to `Atomics.waitAsync`, the resulting promise, otherwise ~blocking~."
      ],
      [
        "[[TimeoutTime]]",
        "a non-negative extended mathematical value",
        "The earliest time by which timeout may be triggered; computed using time values."
      ],
      [
        "[[Result]]",
        "*\"ok\"* or *\"timed-out\"*",
        "The return value of the call."
      ]
    ]
  },
  "table-module-graph-cycle-async-fields-6" : {
    "id" : "table-module-graph-cycle-async-fields-6",
    "header" : [
      "Module",
      "[[DFSIndex]]",
      "[[DFSAncestorIndex]]",
      "[[Status]]",
      "[[AsyncEvaluation]]",
      "[[AsyncParentModules]]",
      "[[PendingAsyncDependencies]]"
    ],
    "rows" : [
      [
        "_A_",
        "0",
        "0",
        "~evaluated~",
        "*true*",
        "« »",
        "0"
      ]
    ]
  },
  "table-abstract-methods-of-module-records" : {
    "id" : "table-abstract-methods-of-module-records",
    "header" : [
      "Method",
      "Purpose"
    ],
    "rows" : [
      [
        "LoadRequestedModules( [ _hostDefined_ ] )",
        "Prepares the module for linking by recursively loading all its dependencies, and returns a promise."
      ],
      [
        "GetExportedNames([_exportStarSet_])",
        "Return a list of all names that are either directly or indirectly exported from this module. LoadRequestedModules must have completed successfully prior to invoking this method."
      ],
      [
        "ResolveExport(_exportName_ [, _resolveSet_])",
        "Return the binding of a name exported by this module. Bindings are represented by a ResolvedBinding Record, of the form { [[Module]]: Module Record, [[BindingName]]: String | ~namespace~ }. If the export is a Module Namespace Object without a direct binding in any module, [[BindingName]] will be set to ~namespace~. Return *null* if the name cannot be resolved, or ~ambiguous~ if multiple bindings were found. Each time this operation is called with a specific _exportName_, _resolveSet_ pair as arguments it must return the same result. LoadRequestedModules must have completed successfully prior to invoking this method."
      ],
      [
        "Link()",
        "Prepare the module for evaluation by transitively resolving all module dependencies and creating a Module Environment Record. LoadRequestedModules must have completed successfully prior to invoking this method."
      ],
      [
        "Evaluate()",
        "Returns a promise for the evaluation of this module and its dependencies, resolving on successful evaluation or if it has already been evaluated successfully, and rejecting for an evaluation error or if it has already been evaluated unsuccessfully. If the promise is rejected, hosts are expected to handle the promise rejection and rethrow the evaluation error. Link must have completed successfully prior to invoking this method."
      ]
    ]
  },
  "table-readsharedmemory-fields" : {
    "id" : "table-readsharedmemory-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Order]]",
        "~seq-cst~ or ~unordered~",
        "The weakest ordering guaranteed by the memory model for the event."
      ],
      [
        "[[NoTear]]",
        "a Boolean",
        "Whether this event is allowed to read from multiple write events with equal range as this event."
      ],
      [
        "[[Block]]",
        "a Shared Data Block",
        "The block the event operates on."
      ],
      [
        "[[ByteIndex]]",
        "a non-negative integer",
        "The byte address of the read in [[Block]]."
      ],
      [
        "[[ElementSize]]",
        "a non-negative integer",
        "The size of the read."
      ]
    ]
  },
  "table-numeric-type-ops" : {
    "id" : "table-numeric-type-ops",
    "header" : [
      "Operation",
      "Example source",
      "Invoked by the Evaluation semantics of ...",
      "Result"
    ],
    "rows" : [
      [
        "Number::unaryMinus",
        "`-x`",
        "",
        "Number"
      ],
      [
        "BigInt::unaryMinus",
        "BigInt"
      ],
      [
        "Number::bitwiseNOT",
        "`~x`",
        "",
        "Number"
      ],
      [
        "BigInt::bitwiseNOT",
        "BigInt"
      ],
      [
        "Number::exponentiate",
        "`x ** y`",
        "and",
        "Number"
      ],
      [
        "BigInt::exponentiate",
        "either a normal completion containing a BigInt or a throw completion"
      ],
      [
        "Number::multiply",
        "`x * y`",
        "",
        "Number"
      ],
      [
        "BigInt::multiply",
        "BigInt"
      ],
      [
        "Number::divide",
        "`x / y`",
        "",
        "Number"
      ],
      [
        "BigInt::divide",
        "either a normal completion containing a BigInt or a throw completion"
      ],
      [
        "Number::remainder",
        "`x % y`",
        "",
        "Number"
      ],
      [
        "BigInt::remainder",
        "either a normal completion containing a BigInt or a throw completion"
      ],
      [
        "Number::add",
        "`x ++` `++ x` `x + y`",
        ", , and",
        "Number"
      ],
      [
        "BigInt::add",
        "BigInt"
      ],
      [
        "Number::subtract",
        "`x --` `-- x` `x - y`",
        ", , and",
        "Number"
      ],
      [
        "BigInt::subtract",
        "BigInt"
      ],
      [
        "Number::leftShift",
        "`x << y`",
        "",
        "Number"
      ],
      [
        "BigInt::leftShift",
        "BigInt"
      ],
      [
        "Number::signedRightShift",
        "`x >> y`",
        "",
        "Number"
      ],
      [
        "BigInt::signedRightShift",
        "BigInt"
      ],
      [
        "Number::unsignedRightShift",
        "`x >>> y`",
        "",
        "Number"
      ],
      [
        "BigInt::unsignedRightShift",
        "a throw completion"
      ],
      [
        "Number::lessThan",
        "`x < y` `x > y` `x <= y` `x >= y`",
        ", via",
        "Boolean or *undefined* (for unordered inputs)"
      ],
      [
        "BigInt::lessThan",
        "Boolean"
      ],
      [
        "Number::equal",
        "`x == y` `x != y` `x === y` `x !== y`",
        ", via",
        "Boolean"
      ],
      [
        "BigInt::equal"
      ],
      [
        "Number::sameValue",
        "`Object.is(x, y)`",
        "Object internal methods, via , to test exact value equality",
        "Boolean"
      ],
      [
        "Number::sameValueZero",
        "`[x].includes(y)`",
        "Array, Map, and Set methods, via , to test value equality, ignoring the difference between *+0*𝔽 and *-0*𝔽",
        "Boolean"
      ],
      [
        "Number::bitwiseAND",
        "`x & y`",
        "",
        "Number"
      ],
      [
        "BigInt::bitwiseAND",
        "BigInt"
      ],
      [
        "Number::bitwiseXOR",
        "`x ^ y`",
        "Number"
      ],
      [
        "BigInt::bitwiseXOR",
        "BigInt"
      ],
      [
        "Number::bitwiseOR",
        "`x | y`",
        "Number"
      ],
      [
        "BigInt::bitwiseOR",
        "BigInt"
      ],
      [
        "Number::toString",
        "`String(x)`",
        "Many expressions and built-in functions, via",
        "String"
      ],
      [
        "BigInt::toString"
      ]
    ]
  },
  "table-iterable-interface-required-properties" : {
    "id" : "table-iterable-interface-required-properties",
    "header" : [
      "Property",
      "Value",
      "Requirements"
    ],
    "rows" : [
      [
        "`@@iterator`",
        "a function that returns an Iterator object",
        "The returned object must conform to the Iterator interface."
      ]
    ]
  },
  "table-controlescape-code-point-values" : {
    "id" : "table-controlescape-code-point-values",
    "header" : [
      "ControlEscape",
      "Numeric Value",
      "Code Point",
      "Unicode Name",
      "Symbol"
    ],
    "rows" : [
      [
        "`t`",
        "9",
        "`U+0009`",
        "CHARACTER TABULATION",
        "<HT>"
      ],
      [
        "`n`",
        "10",
        "`U+000A`",
        "LINE FEED (LF)",
        "<LF>"
      ],
      [
        "`v`",
        "11",
        "`U+000B`",
        "LINE TABULATION",
        "<VT>"
      ],
      [
        "`f`",
        "12",
        "`U+000C`",
        "FORM FEED (FF)",
        "<FF>"
      ],
      [
        "`r`",
        "13",
        "`U+000D`",
        "CARRIAGE RETURN (CR)",
        "<CR>"
      ]
    ]
  },
  "table-module-graph-cycle-async-fields-1" : {
    "id" : "table-module-graph-cycle-async-fields-1",
    "header" : [
      "Module",
      "[[DFSIndex]]",
      "[[DFSAncestorIndex]]",
      "[[Status]]",
      "[[AsyncEvaluation]]",
      "[[AsyncParentModules]]",
      "[[PendingAsyncDependencies]]"
    ],
    "rows" : [
      [
        "_A_",
        "0",
        "0",
        "~evaluating-async~",
        "*true*",
        "« »",
        "2 (_B_ and _C_)"
      ],
      [
        "_B_",
        "1",
        "0",
        "~evaluating-async~",
        "*true*",
        "« _A_ »",
        "1 (_D_)"
      ],
      [
        "_C_",
        "2",
        "0",
        "~evaluating-async~",
        "*true*",
        "« _A_ »",
        "2 (_D_ and _E_)"
      ],
      [
        "_D_",
        "3",
        "0",
        "~evaluating-async~",
        "*true*",
        "« _B_, _C_ »",
        "0"
      ],
      [
        "_E_",
        "4",
        "4",
        "~evaluating-async~",
        "*true*",
        "« _C_ »",
        "0"
      ]
    ]
  },
  "table-the-typedarray-constructors" : {
    "id" : "table-the-typedarray-constructors",
    "header" : [
      "Constructor Name and Intrinsic",
      "Element Type",
      "Element Size",
      "Conversion Operation",
      "Description"
    ],
    "rows" : [
      [
        "Int8Array %Int8Array%",
        "~int8~",
        "1",
        "ToInt8",
        "8-bit two's complement signed integer"
      ],
      [
        "Uint8Array %Uint8Array%",
        "~uint8~",
        "1",
        "ToUint8",
        "8-bit unsigned integer"
      ],
      [
        "Uint8ClampedArray %Uint8ClampedArray%",
        "~uint8clamped~",
        "1",
        "ToUint8Clamp",
        "8-bit unsigned integer (clamped conversion)"
      ],
      [
        "Int16Array %Int16Array%",
        "~int16~",
        "2",
        "ToInt16",
        "16-bit two's complement signed integer"
      ],
      [
        "Uint16Array %Uint16Array%",
        "~uint16~",
        "2",
        "ToUint16",
        "16-bit unsigned integer"
      ],
      [
        "Int32Array %Int32Array%",
        "~int32~",
        "4",
        "ToInt32",
        "32-bit two's complement signed integer"
      ],
      [
        "Uint32Array %Uint32Array%",
        "~uint32~",
        "4",
        "ToUint32",
        "32-bit unsigned integer"
      ],
      [
        "BigInt64Array %BigInt64Array%",
        "~bigint64~",
        "8",
        "ToBigInt64",
        "64-bit two's complement signed integer"
      ],
      [
        "BigUint64Array %BigUint64Array%",
        "~biguint64~",
        "8",
        "ToBigUint64",
        "64-bit unsigned integer"
      ],
      [
        "Float32Array %Float32Array%",
        "~float32~",
        "4",
        "",
        "32-bit IEEE floating point"
      ],
      [
        "Float64Array %Float64Array%",
        "~float64~",
        "8",
        "",
        "64-bit IEEE floating point"
      ]
    ]
  },
  "table-abstract-methods-of-environment-records" : {
    "id" : "table-abstract-methods-of-environment-records",
    "header" : [
      "Method",
      "Purpose"
    ],
    "rows" : [
      [
        "HasBinding(N)",
        "Determine if an Environment Record has a binding for the String value _N_. Return *true* if it does and *false* if it does not."
      ],
      [
        "CreateMutableBinding(N, D)",
        "Create a new but uninitialized mutable binding in an Environment Record. The String value _N_ is the text of the bound name. If the Boolean argument _D_ is *true* the binding may be subsequently deleted."
      ],
      [
        "CreateImmutableBinding(N, S)",
        "Create a new but uninitialized immutable binding in an Environment Record. The String value _N_ is the text of the bound name. If _S_ is *true* then attempts to set it after it has been initialized will always throw an exception, regardless of the strict mode setting of operations that reference that binding."
      ],
      [
        "InitializeBinding(N, V)",
        "Set the value of an already existing but uninitialized binding in an Environment Record. The String value _N_ is the text of the bound name. _V_ is the value for the binding and is a value of any ECMAScript language type."
      ],
      [
        "SetMutableBinding(N, V, S)",
        "Set the value of an already existing mutable binding in an Environment Record. The String value _N_ is the text of the bound name. _V_ is the value for the binding and may be a value of any ECMAScript language type. _S_ is a Boolean flag. If _S_ is *true* and the binding cannot be set throw a *TypeError* exception."
      ],
      [
        "GetBindingValue(N, S)",
        "Returns the value of an already existing binding from an Environment Record. The String value _N_ is the text of the bound name. _S_ is used to identify references originating in strict mode code or that otherwise require strict mode reference semantics. If _S_ is *true* and the binding does not exist throw a *ReferenceError* exception. If the binding exists but is uninitialized a *ReferenceError* is thrown, regardless of the value of _S_."
      ],
      [
        "DeleteBinding(N)",
        "Delete a binding from an Environment Record. The String value _N_ is the text of the bound name. If a binding for _N_ exists, remove the binding and return *true*. If the binding exists but cannot be removed return *false*. If the binding does not exist return *true*."
      ],
      [
        "HasThisBinding()",
        "Determine if an Environment Record establishes a `this` binding. Return *true* if it does and *false* if it does not."
      ],
      [
        "HasSuperBinding()",
        "Determine if an Environment Record establishes a `super` method binding. Return *true* if it does and *false* if it does not."
      ],
      [
        "WithBaseObject()",
        "If this Environment Record is associated with a `with` statement, return the with object. Otherwise, return *undefined*."
      ]
    ]
  },
  "table-white-space-code-points" : {
    "id" : "table-white-space-code-points",
    "header" : [
      "Code Points",
      "Name",
      "Abbreviation"
    ],
    "rows" : [
      [
        "`U+0009`",
        "CHARACTER TABULATION",
        "<TAB>"
      ],
      [
        "`U+000B`",
        "LINE TABULATION",
        "<VT>"
      ],
      [
        "`U+000C`",
        "FORM FEED (FF)",
        "<FF>"
      ],
      [
        "`U+FEFF`",
        "ZERO WIDTH NO-BREAK SPACE",
        "<ZWNBSP>"
      ],
      [
        "any code point in general category “Space_Separator”",
        "",
        "<USP>"
      ]
    ]
  },
  "table-privateenvironment-records" : {
    "id" : "table-privateenvironment-records",
    "header" : [
      "Field Name",
      "Value Type",
      "Meaning"
    ],
    "rows" : [
      [
        "[[OuterPrivateEnvironment]]",
        "a PrivateEnvironment Record or *null*",
        "The PrivateEnvironment Record of the nearest containing class. *null* if the class with which this PrivateEnvironment Record is associated is not contained in any other class."
      ],
      [
        "[[Names]]",
        "a List of Private Names",
        "The Private Names declared by this class."
      ]
    ]
  },
  "table-object-property-attributes" : {
    "id" : "table-object-property-attributes",
    "header" : [
      "Attribute Name",
      "Types of property for which it is present",
      "Value Domain",
      "Default Value",
      "Description"
    ],
    "rows" : [
      [
        "[[Value]]",
        "data property",
        "an ECMAScript language value",
        "*undefined*",
        "The value retrieved by a get access of the property."
      ],
      [
        "[[Writable]]",
        "data property",
        "a Boolean",
        "*false*",
        "If *false*, attempts by ECMAScript code to change the property's [[Value]] attribute using [[Set]] will not succeed."
      ],
      [
        "[[Get]]",
        "accessor property",
        "an Object or *undefined*",
        "*undefined*",
        "If the value is an Object it must be a function object. The function's [[Call]] internal method () is called with an empty arguments list to retrieve the property value each time a get access of the property is performed."
      ],
      [
        "[[Set]]",
        "accessor property",
        "an Object or *undefined*",
        "*undefined*",
        "If the value is an Object it must be a function object. The function's [[Call]] internal method () is called with an arguments list containing the assigned value as its sole argument each time a set access of the property is performed. The effect of a property's [[Set]] internal method may, but is not required to, have an effect on the value returned by subsequent calls to the property's [[Get]] internal method."
      ],
      [
        "[[Enumerable]]",
        "data property or accessor property",
        "a Boolean",
        "*false*",
        "If *true*, the property will be enumerated by a for-in enumeration (see ). Otherwise, the property is said to be non-enumerable."
      ],
      [
        "[[Configurable]]",
        "data property or accessor property",
        "a Boolean",
        "*false*",
        "If *false*, attempts to delete the property, change it from a data property to an accessor property or from an accessor property to a data property, or make any changes to its attributes (other than replacing an existing [[Value]] or setting [[Writable]] to *false*) will fail."
      ]
    ]
  },
  "table-graphloadingstate-record-fields" : {
    "id" : "table-graphloadingstate-record-fields",
    "header" : [
      "Field Name",
      "Value Type",
      "Meaning"
    ],
    "rows" : [
      [
        "[[PromiseCapability]]",
        "a PromiseCapability Record",
        "The promise to resolve when the loading process finishes."
      ],
      [
        "[[IsLoading]]",
        "a Boolean",
        "It is true if the loading process has not finished yet, neither successfully nor with an error."
      ],
      [
        "[[PendingModulesCount]]",
        "a non-negative integer",
        "It tracks the number of pending HostLoadImportedModule calls."
      ],
      [
        "[[Visited]]",
        "a List of Cyclic Module Records",
        "It is a list of the Cyclic Module Records that have been already loaded by the current loading process, to avoid infinite loops with circular dependencies."
      ],
      [
        "[[HostDefined]]",
        "anything (default value is ~empty~)",
        "It contains host-defined data to pass from the LoadRequestedModules caller to HostLoadImportedModule."
      ]
    ]
  },
  "table-async-iterator-required" : {
    "id" : "table-async-iterator-required",
    "header" : [
      "Property",
      "Value",
      "Requirements"
    ],
    "rows" : [
      [
        "*\"next\"*",
        "a function that returns a promise for an IteratorResult object",
        "The returned promise, when fulfilled, must fulfill with an object that conforms to the IteratorResult interface. If a previous call to the `next` method of an AsyncIterator has returned a promise for an IteratorResult object whose *\"done\"* property is *true*, then all subsequent calls to the `next` method of that object should also return a promise for an IteratorResult object whose *\"done\"* property is *true*. However, this requirement is not enforced. Additionally, the IteratorResult object that serves as a fulfillment value should have a *\"value\"* property whose value is not a promise (or \"thenable\"). However, this requirement is also not enforced."
      ]
    ]
  },
  "table-dataview-with-buffer-witness-record-fields" : {
    "id" : "table-dataview-with-buffer-witness-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Object]]",
        "a DataView",
        "The DataView object whose buffer's byte length is loaded."
      ],
      [
        "[[CachedBufferByteLength]]",
        "a non-negative integer or ~detached~",
        "The byte length of the object's [[ViewedArrayBuffer]] when the Record was created."
      ]
    ]
  },
  "table-internal-slots-of-asyncgenerator-instances" : {
    "id" : "table-internal-slots-of-asyncgenerator-instances",
    "header" : [
      "Internal Slot",
      "Type",
      "Description"
    ],
    "rows" : [
      [
        "[[AsyncGeneratorState]]",
        "*undefined*, ~suspended-start~, ~suspended-yield~, ~executing~, ~awaiting-return~, or ~completed~",
        "The current execution state of the async generator."
      ],
      [
        "[[AsyncGeneratorContext]]",
        "an execution context",
        "The execution context that is used when executing the code of this async generator."
      ],
      [
        "[[AsyncGeneratorQueue]]",
        "a List of AsyncGeneratorRequest Records",
        "Records which represent requests to resume the async generator. Except during state transitions, it is non-empty if and only if [[AsyncGeneratorState]] is either ~executing~ or ~awaiting-return~."
      ],
      [
        "[[GeneratorBrand]]",
        "a String or ~empty~",
        "A brand used to distinguish different kinds of async generators. The [[GeneratorBrand]] of async generators declared by ECMAScript source text is always ~empty~."
      ]
    ]
  },
  "table-agent-record" : {
    "id" : "table-agent-record",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[LittleEndian]]",
        "a Boolean",
        "The default value computed for the isLittleEndian parameter when it is needed by the algorithms GetValueFromBuffer and SetValueInBuffer. The choice is implementation-defined and should be the alternative that is most efficient for the implementation. Once the value has been observed it cannot change."
      ],
      [
        "[[CanBlock]]",
        "a Boolean",
        "Determines whether the agent can block or not."
      ],
      [
        "[[Signifier]]",
        "an agent signifier",
        "Uniquely identifies the agent within its agent cluster."
      ],
      [
        "[[IsLockFree1]]",
        "a Boolean",
        "*true* if atomic operations on one-byte values are lock-free, *false* otherwise."
      ],
      [
        "[[IsLockFree2]]",
        "a Boolean",
        "*true* if atomic operations on two-byte values are lock-free, *false* otherwise."
      ],
      [
        "[[IsLockFree8]]",
        "a Boolean",
        "*true* if atomic operations on eight-byte values are lock-free, *false* otherwise."
      ],
      [
        "[[CandidateExecution]]",
        "a candidate execution Record",
        "See the memory model."
      ],
      [
        "[[KeptAlive]]",
        "a List of either Objects or Symbols",
        "Initially a new empty List, representing the list of objects and/or symbols to be kept alive until the end of the current Job"
      ]
    ]
  },
  "table-additional-state-components-for-generator-execution-contexts" : {
    "id" : "table-additional-state-components-for-generator-execution-contexts",
    "header" : [
      "Component",
      "Purpose"
    ],
    "rows" : [
      [
        "Generator",
        "The Generator that this execution context is evaluating."
      ]
    ]
  },
  "table-additional-fields-of-global-environment-records" : {
    "id" : "table-additional-fields-of-global-environment-records",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[ObjectRecord]]",
        "an Object Environment Record",
        "Binding object is the global object. It contains global built-in bindings as well as |FunctionDeclaration|, |GeneratorDeclaration|, |AsyncFunctionDeclaration|, |AsyncGeneratorDeclaration|, and |VariableDeclaration| bindings in global code for the associated realm."
      ],
      [
        "[[GlobalThisValue]]",
        "an Object",
        "The value returned by `this` in global scope. Hosts may provide any ECMAScript Object value."
      ],
      [
        "[[DeclarativeRecord]]",
        "a Declarative Environment Record",
        "Contains bindings for all declarations in global code for the associated realm code except for |FunctionDeclaration|, |GeneratorDeclaration|, |AsyncFunctionDeclaration|, |AsyncGeneratorDeclaration|, and |VariableDeclaration| bindings."
      ],
      [
        "[[VarNames]]",
        "a List of Strings",
        "The string names bound by |FunctionDeclaration|, |GeneratorDeclaration|, |AsyncFunctionDeclaration|, |AsyncGeneratorDeclaration|, and |VariableDeclaration| declarations in global code for the associated realm."
      ]
    ]
  },
  "table-additional-fields-of-function-environment-records" : {
    "id" : "table-additional-fields-of-function-environment-records",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[ThisValue]]",
        "an ECMAScript language value",
        "This is the *this* value used for this invocation of the function."
      ],
      [
        "[[ThisBindingStatus]]",
        "~lexical~, ~initialized~, or ~uninitialized~",
        "If the value is ~lexical~, this is an |ArrowFunction| and does not have a local *this* value."
      ],
      [
        "[[FunctionObject]]",
        "an ECMAScript function object",
        "The function object whose invocation caused this Environment Record to be created."
      ],
      [
        "[[NewTarget]]",
        "an Object or *undefined*",
        "If this Environment Record was created by the [[Construct]] internal method, [[NewTarget]] is the value of the [[Construct]] _newTarget_ parameter. Otherwise, its value is *undefined*."
      ]
    ]
  },
  "table-iterator-record-fields" : {
    "id" : "table-iterator-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Iterator]]",
        "an Object",
        "An object that conforms to the Iterator or AsyncIterator interface."
      ],
      [
        "[[NextMethod]]",
        "an ECMAScript language value",
        "The `next` method of the [[Iterator]] object."
      ],
      [
        "[[Done]]",
        "a Boolean",
        "Whether the iterator has been closed."
      ]
    ]
  },
  "table-for-in-iterator-instance-slots" : {
    "id" : "table-for-in-iterator-instance-slots",
    "header" : [
      "Internal Slot",
      "Type",
      "Description"
    ],
    "rows" : [
      [
        "[[Object]]",
        "an Object",
        "The Object value whose properties are being iterated."
      ],
      [
        "[[ObjectWasVisited]]",
        "a Boolean",
        "*true* if the iterator has invoked [[OwnPropertyKeys]] on [[Object]], *false* otherwise."
      ],
      [
        "[[VisitedKeys]]",
        "a List of Strings",
        "The values that have been emitted by this iterator thus far."
      ],
      [
        "[[RemainingKeys]]",
        "a List of Strings",
        "The values remaining to be emitted for the current object, before iterating the properties of its prototype (if its prototype is not *null*)."
      ]
    ]
  },
  "table-export-forms-mapping-to-exportentry-records" : {
    "id" : "table-export-forms-mapping-to-exportentry-records",
    "header" : [
      "Export Statement Form",
      "[[ExportName]]",
      "[[ModuleRequest]]",
      "[[ImportName]]",
      "[[LocalName]]"
    ],
    "rows" : [
      [
        "`export var v;`",
        "*\"v\"*",
        "*null*",
        "*null*",
        "*\"v\"*"
      ],
      [
        "`export default function f() {}`",
        "*\"default\"*",
        "*null*",
        "*null*",
        "*\"f\"*"
      ],
      [
        "`export default function () {}`",
        "*\"default\"*",
        "*null*",
        "*null*",
        "*\"\\*default\\*\"*"
      ],
      [
        "`export default 42;`",
        "*\"default\"*",
        "*null*",
        "*null*",
        "*\"\\*default\\*\"*"
      ],
      [
        "`export {x};`",
        "*\"x\"*",
        "*null*",
        "*null*",
        "*\"x\"*"
      ],
      [
        "`export {v as x};`",
        "*\"x\"*",
        "*null*",
        "*null*",
        "*\"v\"*"
      ],
      [
        "`export {x} from \"mod\";`",
        "*\"x\"*",
        "*\"mod\"*",
        "*\"x\"*",
        "*null*"
      ],
      [
        "`export {v as x} from \"mod\";`",
        "*\"x\"*",
        "*\"mod\"*",
        "*\"v\"*",
        "*null*"
      ],
      [
        "`export * from \"mod\";`",
        "*null*",
        "*\"mod\"*",
        "~all-but-default~",
        "*null*"
      ],
      [
        "`export * as ns from \"mod\";`",
        "*\"ns\"*",
        "*\"mod\"*",
        "~all~",
        "*null*"
      ]
    ]
  },
  "table-module-graph-cycle-async-fields-2" : {
    "id" : "table-module-graph-cycle-async-fields-2",
    "header" : [
      "Module",
      "[[DFSIndex]]",
      "[[DFSAncestorIndex]]",
      "[[Status]]",
      "[[AsyncEvaluation]]",
      "[[AsyncParentModules]]",
      "[[PendingAsyncDependencies]]"
    ],
    "rows" : [
      [
        "_C_",
        "2",
        "0",
        "~evaluating-async~",
        "*true*",
        "« _A_ »",
        "1 (_D_)"
      ],
      [
        "_E_",
        "4",
        "4",
        "~evaluated~",
        "*true*",
        "« _C_ »",
        "0"
      ]
    ]
  },
  "table-module-graph-cycle-async-fields-5" : {
    "id" : "table-module-graph-cycle-async-fields-5",
    "header" : [
      "Module",
      "[[DFSIndex]]",
      "[[DFSAncestorIndex]]",
      "[[Status]]",
      "[[AsyncEvaluation]]",
      "[[AsyncParentModules]]",
      "[[PendingAsyncDependencies]]"
    ],
    "rows" : [
      [
        "_A_",
        "0",
        "0",
        "~evaluating-async~",
        "*true*",
        "« »",
        "0"
      ],
      [
        "_B_",
        "1",
        "0",
        "~evaluated~",
        "*true*",
        "« _A_ »",
        "0"
      ]
    ]
  },
  "table-writesharedmemory-fields" : {
    "id" : "table-writesharedmemory-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Order]]",
        "~seq-cst~, ~unordered~, or ~init~",
        "The weakest ordering guaranteed by the memory model for the event."
      ],
      [
        "[[NoTear]]",
        "a Boolean",
        "Whether this event is allowed to be read from multiple read events with equal range as this event."
      ],
      [
        "[[Block]]",
        "a Shared Data Block",
        "The block the event operates on."
      ],
      [
        "[[ByteIndex]]",
        "a non-negative integer",
        "The byte address of the write in [[Block]]."
      ],
      [
        "[[ElementSize]]",
        "a non-negative integer",
        "The size of the write."
      ],
      [
        "[[Payload]]",
        "a List of byte values",
        "The List of byte values to be read by other events."
      ]
    ]
  },
  "table-realm-record-fields" : {
    "id" : "table-realm-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[AgentSignifier]]",
        "an agent signifier",
        "The agent that owns this realm"
      ],
      [
        "[[Intrinsics]]",
        "a Record whose field names are intrinsic keys and whose values are objects",
        "The intrinsic values used by code associated with this realm"
      ],
      [
        "[[GlobalObject]]",
        "an Object or *undefined*",
        "The global object for this realm"
      ],
      [
        "[[GlobalEnv]]",
        "a Global Environment Record",
        "The global environment for this realm"
      ],
      [
        "[[TemplateMap]]",
        "a List of Records with fields [[Site]] (a |TemplateLiteral| Parse Node) and [[Array]] (an Array)",
        "Template objects are canonicalized separately for each realm using its Realm Record's [[TemplateMap]]. Each [[Site]] value is a Parse Node that is a |TemplateLiteral|. The associated [[Array]] value is the corresponding template object that is passed to a tag function. Once a Parse Node becomes unreachable, the corresponding [[Array]] is also unreachable, and it would be unobservable if an implementation removed the pair from the [[TemplateMap]] list."
      ],
      [
        "[[LoadedModules]]",
        "a List of Records with fields [[Specifier]] (a String) and [[Module]] (a Module Record)",
        "A map from the specifier strings imported by this realm to the resolved Module Record. The list does not contain two different Records with the same [[Specifier]]. As mentioned in HostLoadImportedModule (), [[LoadedModules]] in Realm Records is only used when running an `import()` expression in a context where there is no active script or module."
      ],
      [
        "[[HostDefined]]",
        "anything (default value is *undefined*)",
        "Field reserved for use by hosts that need to associate additional information with a Realm Record."
      ]
    ]
  },
  "table-typedarray-with-buffer-witness-record-fields" : {
    "id" : "table-typedarray-with-buffer-witness-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Object]]",
        "a TypedArray",
        "The TypedArray whose buffer's byte length is loaded."
      ],
      [
        "[[CachedBufferByteLength]]",
        "a non-negative integer or ~detached~",
        "The byte length of the object's [[ViewedArrayBuffer]] when the Record was created."
      ]
    ]
  },
  "table-well-known-intrinsic-objects" : {
    "id" : "table-well-known-intrinsic-objects",
    "header" : [
      "Intrinsic Name",
      "Global Name",
      "ECMAScript Language Association"
    ],
    "rows" : [
      [
        "%AggregateError%",
        "`AggregateError`",
        "The `AggregateError` constructor ()"
      ],
      [
        "%Array%",
        "`Array`",
        "The Array constructor ()"
      ],
      [
        "%ArrayBuffer%",
        "`ArrayBuffer`",
        "The ArrayBuffer constructor ()"
      ],
      [
        "%ArrayIteratorPrototype%",
        "",
        "The prototype of Array iterator objects ()"
      ],
      [
        "%AsyncFromSyncIteratorPrototype%",
        "",
        "The prototype of async-from-sync iterator objects ()"
      ],
      [
        "%AsyncFunction%",
        "",
        "The constructor of async function objects ()"
      ],
      [
        "%AsyncGeneratorFunction%",
        "",
        "The constructor of async iterator objects ()"
      ],
      [
        "%AsyncIteratorPrototype%",
        "",
        "An object that all standard built-in async iterator objects indirectly inherit from"
      ],
      [
        "%Atomics%",
        "`Atomics`",
        "The `Atomics` object ()"
      ],
      [
        "%BigInt%",
        "`BigInt`",
        "The BigInt constructor ()"
      ],
      [
        "%BigInt64Array%",
        "`BigInt64Array`",
        "The BigInt64Array constructor ()"
      ],
      [
        "%BigUint64Array%",
        "`BigUint64Array`",
        "The BigUint64Array constructor ()"
      ],
      [
        "%Boolean%",
        "`Boolean`",
        "The Boolean constructor ()"
      ],
      [
        "%DataView%",
        "`DataView`",
        "The DataView constructor ()"
      ],
      [
        "%Date%",
        "`Date`",
        "The Date constructor ()"
      ],
      [
        "%decodeURI%",
        "`decodeURI`",
        "The `decodeURI` function ()"
      ],
      [
        "%decodeURIComponent%",
        "`decodeURIComponent`",
        "The `decodeURIComponent` function ()"
      ],
      [
        "%encodeURI%",
        "`encodeURI`",
        "The `encodeURI` function ()"
      ],
      [
        "%encodeURIComponent%",
        "`encodeURIComponent`",
        "The `encodeURIComponent` function ()"
      ],
      [
        "%Error%",
        "`Error`",
        "The Error constructor ()"
      ],
      [
        "%eval%",
        "`eval`",
        "The `eval` function ()"
      ],
      [
        "%EvalError%",
        "`EvalError`",
        "The EvalError constructor ()"
      ],
      [
        "%FinalizationRegistry%",
        "`FinalizationRegistry`",
        "The FinalizationRegistry constructor ()"
      ],
      [
        "%Float32Array%",
        "`Float32Array`",
        "The Float32Array constructor ()"
      ],
      [
        "%Float64Array%",
        "`Float64Array`",
        "The Float64Array constructor ()"
      ],
      [
        "%ForInIteratorPrototype%",
        "",
        "The prototype of For-In iterator objects ()"
      ],
      [
        "%Function%",
        "`Function`",
        "The Function constructor ()"
      ],
      [
        "%GeneratorFunction%",
        "",
        "The constructor of Generators ()"
      ],
      [
        "%Int8Array%",
        "`Int8Array`",
        "The Int8Array constructor ()"
      ],
      [
        "%Int16Array%",
        "`Int16Array`",
        "The Int16Array constructor ()"
      ],
      [
        "%Int32Array%",
        "`Int32Array`",
        "The Int32Array constructor ()"
      ],
      [
        "%isFinite%",
        "`isFinite`",
        "The `isFinite` function ()"
      ],
      [
        "%isNaN%",
        "`isNaN`",
        "The `isNaN` function ()"
      ],
      [
        "%IteratorPrototype%",
        "",
        "An object that all standard built-in iterator objects indirectly inherit from"
      ],
      [
        "%JSON%",
        "`JSON`",
        "The `JSON` object ()"
      ],
      [
        "%Map%",
        "`Map`",
        "The Map constructor ()"
      ],
      [
        "%MapIteratorPrototype%",
        "",
        "The prototype of Map iterator objects ()"
      ],
      [
        "%Math%",
        "`Math`",
        "The `Math` object ()"
      ],
      [
        "%Number%",
        "`Number`",
        "The Number constructor ()"
      ],
      [
        "%Object%",
        "`Object`",
        "The Object constructor ()"
      ],
      [
        "%parseFloat%",
        "`parseFloat`",
        "The `parseFloat` function ()"
      ],
      [
        "%parseInt%",
        "`parseInt`",
        "The `parseInt` function ()"
      ],
      [
        "%Promise%",
        "`Promise`",
        "The Promise constructor ()"
      ],
      [
        "%Proxy%",
        "`Proxy`",
        "The Proxy constructor ()"
      ],
      [
        "%RangeError%",
        "`RangeError`",
        "The RangeError constructor ()"
      ],
      [
        "%ReferenceError%",
        "`ReferenceError`",
        "The ReferenceError constructor ()"
      ],
      [
        "%Reflect%",
        "`Reflect`",
        "The `Reflect` object ()"
      ],
      [
        "%RegExp%",
        "`RegExp`",
        "The RegExp constructor ()"
      ],
      [
        "%RegExpStringIteratorPrototype%",
        "",
        "The prototype of RegExp String Iterator objects ()"
      ],
      [
        "%Set%",
        "`Set`",
        "The Set constructor ()"
      ],
      [
        "%SetIteratorPrototype%",
        "",
        "The prototype of Set iterator objects ()"
      ],
      [
        "%SharedArrayBuffer%",
        "`SharedArrayBuffer`",
        "The SharedArrayBuffer constructor ()"
      ],
      [
        "%String%",
        "`String`",
        "The String constructor ()"
      ],
      [
        "%StringIteratorPrototype%",
        "",
        "The prototype of String iterator objects ()"
      ],
      [
        "%Symbol%",
        "`Symbol`",
        "The Symbol constructor ()"
      ],
      [
        "%SyntaxError%",
        "`SyntaxError`",
        "The SyntaxError constructor ()"
      ],
      [
        "%ThrowTypeError%",
        "",
        "A function object that unconditionally throws a new instance of %TypeError%"
      ],
      [
        "%TypedArray%",
        "",
        "The super class of all typed Array constructors ()"
      ],
      [
        "%TypeError%",
        "`TypeError`",
        "The TypeError constructor ()"
      ],
      [
        "%Uint8Array%",
        "`Uint8Array`",
        "The Uint8Array constructor ()"
      ],
      [
        "%Uint8ClampedArray%",
        "`Uint8ClampedArray`",
        "The Uint8ClampedArray constructor ()"
      ],
      [
        "%Uint16Array%",
        "`Uint16Array`",
        "The Uint16Array constructor ()"
      ],
      [
        "%Uint32Array%",
        "`Uint32Array`",
        "The Uint32Array constructor ()"
      ],
      [
        "%URIError%",
        "`URIError`",
        "The URIError constructor ()"
      ],
      [
        "%WeakMap%",
        "`WeakMap`",
        "The WeakMap constructor ()"
      ],
      [
        "%WeakRef%",
        "`WeakRef`",
        "The WeakRef constructor ()"
      ],
      [
        "%WeakSet%",
        "`WeakSet`",
        "The WeakSet constructor ()"
      ]
    ]
  },
  "table-additional-well-known-intrinsic-objects" : {
    "id" : "table-additional-well-known-intrinsic-objects",
    "header" : [
      "Intrinsic Name",
      "Global Name",
      "ECMAScript Language Association"
    ],
    "rows" : [
      [
        "%escape%",
        "`escape`",
        "The `escape` function ()"
      ],
      [
        "%unescape%",
        "`unescape`",
        "The `unescape` function ()"
      ]
    ]
  },
  "table-iteratorresult-interface-properties" : {
    "id" : "table-iteratorresult-interface-properties",
    "header" : [
      "Property",
      "Value",
      "Requirements"
    ],
    "rows" : [
      [
        "*\"done\"*",
        "a Boolean",
        "This is the result status of an iterator `next` method call. If the end of the iterator was reached *\"done\"* is *true*. If the end was not reached *\"done\"* is *false* and a value is available. If a *\"done\"* property (either own or inherited) does not exist, it is considered to have the value *false*."
      ],
      [
        "*\"value\"*",
        "an ECMAScript language value",
        "If done is *false*, this is the current iteration element value. If done is *true*, this is the return value of the iterator, if it supplied one. If the iterator does not have a return value, *\"value\"* is *undefined*. In that case, the *\"value\"* property may be absent from the conforming object if it does not inherit an explicit *\"value\"* property."
      ]
    ]
  },
  "table-additional-state-components-for-ecmascript-code-execution-contexts" : {
    "id" : "table-additional-state-components-for-ecmascript-code-execution-contexts",
    "header" : [
      "Component",
      "Purpose"
    ],
    "rows" : [
      [
        "LexicalEnvironment",
        "Identifies the Environment Record used to resolve identifier references made by code within this execution context."
      ],
      [
        "VariableEnvironment",
        "Identifies the Environment Record that holds bindings created by |VariableStatement|s within this execution context."
      ],
      [
        "PrivateEnvironment",
        "Identifies the PrivateEnvironment Record that holds Private Names created by |ClassElement|s in the nearest containing class. *null* if there is no containing class."
      ]
    ]
  },
  "table-additional-methods-of-global-environment-records" : {
    "id" : "table-additional-methods-of-global-environment-records",
    "header" : [
      "Method",
      "Purpose"
    ],
    "rows" : [
      [
        "GetThisBinding()",
        "Return the value of this Environment Record's `this` binding."
      ],
      [
        "HasVarDeclaration (N)",
        "Determines if the argument identifier has a binding in this Environment Record that was created using a |VariableDeclaration|, |FunctionDeclaration|, |GeneratorDeclaration|, |AsyncFunctionDeclaration|, or |AsyncGeneratorDeclaration|."
      ],
      [
        "HasLexicalDeclaration (N)",
        "Determines if the argument identifier has a binding in this Environment Record that was created using a lexical declaration such as a |LexicalDeclaration| or a |ClassDeclaration|."
      ],
      [
        "HasRestrictedGlobalProperty (N)",
        "Determines if the argument is the name of a global object property that may not be shadowed by a global lexical binding."
      ],
      [
        "CanDeclareGlobalVar (N)",
        "Determines if a corresponding CreateGlobalVarBinding call would succeed if called for the same argument _N_."
      ],
      [
        "CanDeclareGlobalFunction (N)",
        "Determines if a corresponding CreateGlobalFunctionBinding call would succeed if called for the same argument _N_."
      ],
      [
        "CreateGlobalVarBinding(N, D)",
        "Used to create and initialize to *undefined* a global `var` binding in the [[ObjectRecord]] component of a Global Environment Record. The binding will be a mutable binding. The corresponding global object property will have attribute values appropriate for a `var`. The String value _N_ is the bound name. If _D_ is *true*, the binding may be deleted. Logically equivalent to CreateMutableBinding followed by a SetMutableBinding but it allows var declarations to receive special treatment."
      ],
      [
        "CreateGlobalFunctionBinding(N, V, D)",
        "Create and initialize a global `function` binding in the [[ObjectRecord]] component of a Global Environment Record. The binding will be a mutable binding. The corresponding global object property will have attribute values appropriate for a `function`. The String value _N_ is the bound name. _V_ is the initialization value. If the Boolean argument _D_ is *true*, the binding may be deleted. Logically equivalent to CreateMutableBinding followed by a SetMutableBinding but it allows function declarations to receive special treatment."
      ]
    ]
  },
  "table-internal-slots-of-module-namespace-exotic-objects" : {
    "id" : "table-internal-slots-of-module-namespace-exotic-objects",
    "header" : [
      "Internal Slot",
      "Type",
      "Description"
    ],
    "rows" : [
      [
        "[[Module]]",
        "a Module Record",
        "The Module Record whose exports this namespace exposes."
      ],
      [
        "[[Exports]]",
        "a List of Strings",
        "A List whose elements are the String values of the exported names exposed as own properties of this object. The list is ordered as if an Array of those String values had been sorted using %Array.prototype.sort% using *undefined* as _comparefn_."
      ]
    ]
  },
  "table-module-graph-cycle-async-fields-9" : {
    "id" : "table-module-graph-cycle-async-fields-9",
    "header" : [
      "Module",
      "[[DFSIndex]]",
      "[[DFSAncestorIndex]]",
      "[[Status]]",
      "[[AsyncEvaluation]]",
      "[[AsyncParentModules]]",
      "[[PendingAsyncDependencies]]",
      "[[EvaluationError]]"
    ],
    "rows" : [
      [
        "_A_",
        "0",
        "0",
        "~evaluated~",
        "*true*",
        "« »",
        "0",
        "_C_'s Evaluation Error"
      ],
      [
        "_B_",
        "1",
        "0",
        "~evaluated~",
        "*true*",
        "« _A_ »",
        "0",
        "~empty~"
      ]
    ]
  },
  "table-additional-methods-of-function-environment-records" : {
    "id" : "table-additional-methods-of-function-environment-records",
    "header" : [
      "Method",
      "Purpose"
    ],
    "rows" : [
      [
        "BindThisValue(V)",
        "Set the [[ThisValue]] and record that it has been initialized."
      ],
      [
        "GetThisBinding()",
        "Return the value of this Environment Record's `this` binding. Throws a *ReferenceError* if the `this` binding has not been initialized."
      ],
      [
        "GetSuperBase()",
        "Return the object that is the base for `super` property accesses bound in this Environment Record. The value *undefined* indicates that such accesses will produce runtime errors."
      ]
    ]
  },
  "table-additional-methods-of-module-environment-records" : {
    "id" : "table-additional-methods-of-module-environment-records",
    "header" : [
      "Method",
      "Purpose"
    ],
    "rows" : [
      [
        "CreateImportBinding(N, M, N2)",
        "Create an immutable indirect binding in a Module Environment Record. The String value _N_ is the text of the bound name. _M_ is a Module Record, and _N2_ is a binding that exists in _M_'s Module Environment Record."
      ],
      [
        "GetThisBinding()",
        "Return the value of this Environment Record's `this` binding."
      ]
    ]
  },
  "table-promisereaction-record-fields" : {
    "id" : "table-promisereaction-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Capability]]",
        "a PromiseCapability Record or *undefined*",
        "The capabilities of the promise for which this record provides a reaction handler."
      ],
      [
        "[[Type]]",
        "~fulfill~ or ~reject~",
        "The [[Type]] is used when [[Handler]] is ~empty~ to allow for behaviour specific to the settlement type."
      ],
      [
        "[[Handler]]",
        "a JobCallback Record or ~empty~",
        "The function that should be applied to the incoming value, and whose return value will govern what happens to the derived promise. If [[Handler]] is ~empty~, a function that depends on the value of [[Type]] will be used instead."
      ]
    ]
  },
  "table-async-from-sync-iterator-internal-slots" : {
    "id" : "table-async-from-sync-iterator-internal-slots",
    "header" : [
      "Internal Slot",
      "Type",
      "Description"
    ],
    "rows" : [
      [
        "[[SyncIteratorRecord]]",
        "an Iterator Record",
        "Represents the original synchronous iterator which is being adapted."
      ]
    ]
  },
  "table-importentry-record-fields" : {
    "id" : "table-importentry-record-fields",
    "header" : [
      "Field Name",
      "Value Type",
      "Meaning"
    ],
    "rows" : [
      [
        "[[ModuleRequest]]",
        "a String",
        "String value of the |ModuleSpecifier| of the |ImportDeclaration|."
      ],
      [
        "[[ImportName]]",
        "a String or ~namespace-object~",
        "The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. The value ~namespace-object~ indicates that the import request is for the target module's namespace object."
      ],
      [
        "[[LocalName]]",
        "a String",
        "The name that is used to locally access the imported value from within the importing module."
      ]
    ]
  },
  "table-state-components-for-all-execution-contexts" : {
    "id" : "table-state-components-for-all-execution-contexts",
    "header" : [
      "Component",
      "Purpose"
    ],
    "rows" : [
      [
        "code evaluation state",
        "Any state needed to perform, suspend, and resume evaluation of the code associated with this execution context."
      ],
      [
        "Function",
        "If this execution context is evaluating the code of a function object, then the value of this component is that function object. If the context is evaluating the code of a |Script| or |Module|, the value is *null*."
      ],
      [
        "Realm",
        "The Realm Record from which associated code accesses ECMAScript resources."
      ],
      [
        "ScriptOrModule",
        "The Module Record or Script Record from which associated code originates. If there is no originating script or module, as is the case for the original execution context created in InitializeHostDefinedRealm, the value is *null*."
      ]
    ]
  },
  "table-script-records" : {
    "id" : "table-script-records",
    "header" : [
      "Field Name",
      "Value Type",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Realm]]",
        "a Realm Record or *undefined*",
        "The realm within which this script was created. *undefined* if not yet assigned."
      ],
      [
        "[[ECMAScriptCode]]",
        "a |Script| Parse Node",
        "The result of parsing the source text of this script."
      ],
      [
        "[[LoadedModules]]",
        "a List of Records with fields [[Specifier]] (a String) and [[Module]] (a Module Record)",
        "A map from the specifier strings imported by this script to the resolved Module Record. The list does not contain two different Records with the same [[Specifier]]."
      ],
      [
        "[[HostDefined]]",
        "anything (default value is ~empty~)",
        "Field reserved for use by host environments that need to associate additional information with a script."
      ]
    ]
  },
  "table-tobigint" : {
    "id" : "table-tobigint",
    "header" : [
      "Argument Type",
      "Result"
    ],
    "rows" : [
      [
        "Undefined",
        "Throw a *TypeError* exception."
      ],
      [
        "Null",
        "Throw a *TypeError* exception."
      ],
      [
        "Boolean",
        "Return `1n` if _prim_ is *true* and `0n` if _prim_ is *false*."
      ],
      [
        "BigInt",
        "Return _prim_."
      ],
      [
        "Number",
        "Throw a *TypeError* exception."
      ],
      [
        "String",
        "1. Let _n_ be StringToBigInt(_prim_). 1. If _n_ is *undefined*, throw a *SyntaxError* exception. 1. Return _n_."
      ],
      [
        "Symbol",
        "Throw a *TypeError* exception."
      ]
    ]
  },
  "table-completion-record-fields" : {
    "id" : "table-completion-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Type]]",
        "~normal~, ~break~, ~continue~, ~return~, or ~throw~",
        "The type of completion that occurred."
      ],
      [
        "[[Value]]",
        "any value except a Completion Record",
        "The value that was produced."
      ],
      [
        "[[Target]]",
        "a String or ~empty~",
        "The target label for directed control transfers."
      ]
    ]
  },
  "table-promisecapability-record-fields" : {
    "id" : "table-promisecapability-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Promise]]",
        "an Object",
        "An object that is usable as a promise."
      ],
      [
        "[[Resolve]]",
        "a function object",
        "The function that is used to resolve the given promise."
      ],
      [
        "[[Reject]]",
        "a function object",
        "The function that is used to reject the given promise."
      ]
    ]
  },
  "table-internal-slots-of-bound-function-exotic-objects" : {
    "id" : "table-internal-slots-of-bound-function-exotic-objects",
    "header" : [
      "Internal Slot",
      "Type",
      "Description"
    ],
    "rows" : [
      [
        "[[BoundTargetFunction]]",
        "a callable Object",
        "The wrapped function object."
      ],
      [
        "[[BoundThis]]",
        "an ECMAScript language value",
        "The value that is always passed as the *this* value when calling the wrapped function."
      ],
      [
        "[[BoundArguments]]",
        "a List of ECMAScript language values",
        "A list of values whose elements are used as the first arguments to any call to the wrapped function."
      ]
    ]
  },
  "table-additional-fields-of-object-environment-records" : {
    "id" : "table-additional-fields-of-object-environment-records",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[BindingObject]]",
        "an Object",
        "The binding object of this Environment Record."
      ],
      [
        "[[IsWithEnvironment]]",
        "a Boolean",
        "Indicates whether this Environment Record is created for a `with` statement."
      ]
    ]
  },
  "sec-todatestring-month-names" : {
    "id" : "sec-todatestring-month-names",
    "header" : [
      "Number",
      "Name"
    ],
    "rows" : [
      [
        "*+0*𝔽",
        "*\"Jan\"*"
      ],
      [
        "*1*𝔽",
        "*\"Feb\"*"
      ],
      [
        "*2*𝔽",
        "*\"Mar\"*"
      ],
      [
        "*3*𝔽",
        "*\"Apr\"*"
      ],
      [
        "*4*𝔽",
        "*\"May\"*"
      ],
      [
        "*5*𝔽",
        "*\"Jun\"*"
      ],
      [
        "*6*𝔽",
        "*\"Jul\"*"
      ],
      [
        "*7*𝔽",
        "*\"Aug\"*"
      ],
      [
        "*8*𝔽",
        "*\"Sep\"*"
      ],
      [
        "*9*𝔽",
        "*\"Oct\"*"
      ],
      [
        "*10*𝔽",
        "*\"Nov\"*"
      ],
      [
        "*11*𝔽",
        "*\"Dec\"*"
      ]
    ]
  },
  "table-match-record" : {
    "id" : "table-match-record",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[StartIndex]]",
        "a non-negative integer",
        "The number of code units from the start of a string at which the match begins (inclusive)."
      ],
      [
        "[[EndIndex]]",
        "an integer ≥ [[StartIndex]]",
        "The number of code units from the start of a string at which the match ends (exclusive)."
      ]
    ]
  },
  "table-string-single-character-escape-sequences" : {
    "id" : "table-string-single-character-escape-sequences",
    "header" : [
      "Escape Sequence",
      "Code Unit Value",
      "Unicode Character Name",
      "Symbol"
    ],
    "rows" : [
      [
        "`\\\\b`",
        "`0x0008`",
        "BACKSPACE",
        "<BS>"
      ],
      [
        "`\\\\t`",
        "`0x0009`",
        "CHARACTER TABULATION",
        "<HT>"
      ],
      [
        "`\\\\n`",
        "`0x000A`",
        "LINE FEED (LF)",
        "<LF>"
      ],
      [
        "`\\\\v`",
        "`0x000B`",
        "LINE TABULATION",
        "<VT>"
      ],
      [
        "`\\\\f`",
        "`0x000C`",
        "FORM FEED (FF)",
        "<FF>"
      ],
      [
        "`\\\\r`",
        "`0x000D`",
        "CARRIAGE RETURN (CR)",
        "<CR>"
      ],
      [
        "`\\\\\"`",
        "`0x0022`",
        "QUOTATION MARK",
        "`\"`"
      ],
      [
        "`\\\\'`",
        "`0x0027`",
        "APOSTROPHE",
        "`'`"
      ],
      [
        "`\\\\\\\\`",
        "`0x005C`",
        "REVERSE SOLIDUS",
        "`\\\\`"
      ]
    ]
  },
  "table-async-iterable" : {
    "id" : "table-async-iterable",
    "header" : [
      "Property",
      "Value",
      "Requirements"
    ],
    "rows" : [
      [
        "`@@asyncIterator`",
        "a function that returns an AsyncIterator object",
        "The returned object must conform to the AsyncIterator interface."
      ]
    ]
  },
  "table-globalsymbolregistry-record-fields" : {
    "id" : "table-globalsymbolregistry-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Usage"
    ],
    "rows" : [
      [
        "[[Key]]",
        "a String",
        "A string key used to globally identify a Symbol."
      ],
      [
        "[[Symbol]]",
        "a Symbol",
        "A symbol that can be retrieved from any realm."
      ]
    ]
  },
  "table-module-graph-cycle-async-fields-4" : {
    "id" : "table-module-graph-cycle-async-fields-4",
    "header" : [
      "Module",
      "[[DFSIndex]]",
      "[[DFSAncestorIndex]]",
      "[[Status]]",
      "[[AsyncEvaluation]]",
      "[[AsyncParentModules]]",
      "[[PendingAsyncDependencies]]"
    ],
    "rows" : [
      [
        "_A_",
        "0",
        "0",
        "~evaluating-async~",
        "*true*",
        "« »",
        "1 (_B_)"
      ],
      [
        "_C_",
        "2",
        "0",
        "~evaluated~",
        "*true*",
        "« _A_ »",
        "0"
      ]
    ]
  },
  "table-internal-slots-of-promise-instances" : {
    "id" : "table-internal-slots-of-promise-instances",
    "header" : [
      "Internal Slot",
      "Type",
      "Description"
    ],
    "rows" : [
      [
        "[[PromiseState]]",
        "~pending~, ~fulfilled~, or ~rejected~",
        "Governs how a promise will react to incoming calls to its `then` method."
      ],
      [
        "[[PromiseResult]]",
        "an ECMAScript language value",
        "The value with which the promise has been fulfilled or rejected, if any. Only meaningful if [[PromiseState]] is not ~pending~."
      ],
      [
        "[[PromiseFulfillReactions]]",
        "a List of PromiseReaction Records",
        "Records to be processed when/if the promise transitions from the ~pending~ state to the ~fulfilled~ state."
      ],
      [
        "[[PromiseRejectReactions]]",
        "a List of PromiseReaction Records",
        "Records to be processed when/if the promise transitions from the ~pending~ state to the ~rejected~ state."
      ],
      [
        "[[PromiseIsHandled]]",
        "a Boolean",
        "Indicates whether the promise has ever had a fulfillment or rejection handler; used in unhandled rejection tracking."
      ]
    ]
  },
  "table-well-known-symbols" : {
    "id" : "table-well-known-symbols",
    "header" : [
      "Specification Name",
      "[[Description]]",
      "Value and Purpose"
    ],
    "rows" : [
      [
        "@@asyncIterator",
        "*\"Symbol.asyncIterator\"*",
        "A method that returns the default AsyncIterator for an object. Called by the semantics of the `for`-`await`-`of` statement."
      ],
      [
        "@@hasInstance",
        "*\"Symbol.hasInstance\"*",
        "A method that determines if a constructor object recognizes an object as one of the constructor's instances. Called by the semantics of the `instanceof` operator."
      ],
      [
        "@@isConcatSpreadable",
        "*\"Symbol.isConcatSpreadable\"*",
        "A Boolean valued property that if true indicates that an object should be flattened to its array elements by `Array.prototype.concat`."
      ],
      [
        "@@iterator",
        "*\"Symbol.iterator\"*",
        "A method that returns the default Iterator for an object. Called by the semantics of the for-of statement."
      ],
      [
        "@@match",
        "*\"Symbol.match\"*",
        "A regular expression method that matches the regular expression against a string. Called by the `String.prototype.match` method."
      ],
      [
        "@@matchAll",
        "*\"Symbol.matchAll\"*",
        "A regular expression method that returns an iterator, that yields matches of the regular expression against a string. Called by the `String.prototype.matchAll` method."
      ],
      [
        "@@replace",
        "*\"Symbol.replace\"*",
        "A regular expression method that replaces matched substrings of a string. Called by the `String.prototype.replace` method."
      ],
      [
        "@@search",
        "*\"Symbol.search\"*",
        "A regular expression method that returns the index within a string that matches the regular expression. Called by the `String.prototype.search` method."
      ],
      [
        "@@species",
        "*\"Symbol.species\"*",
        "A function valued property that is the constructor function that is used to create derived objects."
      ],
      [
        "@@split",
        "*\"Symbol.split\"*",
        "A regular expression method that splits a string at the indices that match the regular expression. Called by the `String.prototype.split` method."
      ],
      [
        "@@toPrimitive",
        "*\"Symbol.toPrimitive\"*",
        "A method that converts an object to a corresponding primitive value. Called by the ToPrimitive abstract operation."
      ],
      [
        "@@toStringTag",
        "*\"Symbol.toStringTag\"*",
        "A String valued property that is used in the creation of the default string description of an object. Accessed by the built-in method `Object.prototype.toString`."
      ],
      [
        "@@unscopables",
        "*\"Symbol.unscopables\"*",
        "An object valued property whose own and inherited property names are property names that are excluded from the `with` environment bindings of the associated object."
      ]
    ]
  },
  "table-module-graph-cycle-async-fields-3" : {
    "id" : "table-module-graph-cycle-async-fields-3",
    "header" : [
      "Module",
      "[[DFSIndex]]",
      "[[DFSAncestorIndex]]",
      "[[Status]]",
      "[[AsyncEvaluation]]",
      "[[AsyncParentModules]]",
      "[[PendingAsyncDependencies]]"
    ],
    "rows" : [
      [
        "_B_",
        "1",
        "0",
        "~evaluating-async~",
        "*true*",
        "« _A_ »",
        "0"
      ],
      [
        "_C_",
        "2",
        "0",
        "~evaluating-async~",
        "*true*",
        "« _A_ »",
        "0"
      ],
      [
        "_D_",
        "3",
        "0",
        "~evaluated~",
        "*true*",
        "« _B_, _C_ »",
        "0"
      ]
    ]
  },
  "table-internal-slots-of-generator-instances" : {
    "id" : "table-internal-slots-of-generator-instances",
    "header" : [
      "Internal Slot",
      "Type",
      "Description"
    ],
    "rows" : [
      [
        "[[GeneratorState]]",
        "*undefined*, ~suspended-start~, ~suspended-yield~, ~executing~, or ~completed~",
        "The current execution state of the generator."
      ],
      [
        "[[GeneratorContext]]",
        "an execution context",
        "The execution context that is used when executing the code of this generator."
      ],
      [
        "[[GeneratorBrand]]",
        "a String or ~empty~",
        "A brand used to distinguish different kinds of generators. The [[GeneratorBrand]] of generators declared by ECMAScript source text is always ~empty~."
      ]
    ]
  },
  "table-requireobjectcoercible-results" : {
    "id" : "table-requireobjectcoercible-results",
    "header" : [
      "Argument Type",
      "Result"
    ],
    "rows" : [
      [
        "Undefined",
        "Throw a *TypeError* exception."
      ],
      [
        "Null",
        "Throw a *TypeError* exception."
      ],
      [
        "Boolean",
        "Return _argument_."
      ],
      [
        "Number",
        "Return _argument_."
      ],
      [
        "String",
        "Return _argument_."
      ],
      [
        "Symbol",
        "Return _argument_."
      ],
      [
        "BigInt",
        "Return _argument_."
      ],
      [
        "Object",
        "Return _argument_."
      ]
    ]
  },
  "table-time-zone-identifier-record-fields" : {
    "id" : "table-time-zone-identifier-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Identifier]]",
        "a String",
        "An available named time zone identifier that is supported by the implementation."
      ],
      [
        "[[PrimaryIdentifier]]",
        "a String",
        "The primary time zone identifier that [[Identifier]] resolves to."
      ]
    ]
  },
  "table-jobcallback-records" : {
    "id" : "table-jobcallback-records",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Callback]]",
        "a function object",
        "The function to invoke when the Job is invoked."
      ],
      [
        "[[HostDefined]]",
        "anything (default value is ~empty~)",
        "Field reserved for use by hosts."
      ]
    ]
  },
  "table-format-control-code-point-usage" : {
    "id" : "table-format-control-code-point-usage",
    "header" : [
      "Code Point",
      "Name",
      "Abbreviation",
      "Usage"
    ],
    "rows" : [
      [
        "`U+200C`",
        "ZERO WIDTH NON-JOINER",
        "<ZWNJ>",
        "|IdentifierPart|"
      ],
      [
        "`U+200D`",
        "ZERO WIDTH JOINER",
        "<ZWJ>",
        "|IdentifierPart|"
      ],
      [
        "`U+FEFF`",
        "ZERO WIDTH NO-BREAK SPACE",
        "<ZWNBSP>",
        "|WhiteSpace|"
      ]
    ]
  },
  "table-proxy-handler-methods" : {
    "id" : "table-proxy-handler-methods",
    "header" : [
      "Internal Method",
      "Handler Method"
    ],
    "rows" : [
      [
        "[[GetPrototypeOf]]",
        "`getPrototypeOf`"
      ],
      [
        "[[SetPrototypeOf]]",
        "`setPrototypeOf`"
      ],
      [
        "[[IsExtensible]]",
        "`isExtensible`"
      ],
      [
        "[[PreventExtensions]]",
        "`preventExtensions`"
      ],
      [
        "[[GetOwnProperty]]",
        "`getOwnPropertyDescriptor`"
      ],
      [
        "[[DefineOwnProperty]]",
        "`defineProperty`"
      ],
      [
        "[[HasProperty]]",
        "`has`"
      ],
      [
        "[[Get]]",
        "`get`"
      ],
      [
        "[[Set]]",
        "`set`"
      ],
      [
        "[[Delete]]",
        "`deleteProperty`"
      ],
      [
        "[[OwnPropertyKeys]]",
        "`ownKeys`"
      ],
      [
        "[[Call]]",
        "`apply`"
      ],
      [
        "[[Construct]]",
        "`construct`"
      ]
    ]
  },
  "table-module-graph-cycle-async-fields-8" : {
    "id" : "table-module-graph-cycle-async-fields-8",
    "header" : [
      "Module",
      "[[DFSIndex]]",
      "[[DFSAncestorIndex]]",
      "[[Status]]",
      "[[AsyncEvaluation]]",
      "[[AsyncParentModules]]",
      "[[PendingAsyncDependencies]]",
      "[[EvaluationError]]"
    ],
    "rows" : [
      [
        "_A_",
        "0",
        "0",
        "~evaluated~",
        "*true*",
        "« »",
        "0",
        "_C_'s Evaluation Error"
      ]
    ]
  },
  "table-internal-slots-of-ecmascript-function-objects" : {
    "id" : "table-internal-slots-of-ecmascript-function-objects",
    "header" : [
      "Internal Slot",
      "Type",
      "Description"
    ],
    "rows" : [
      [
        "[[Environment]]",
        "an Environment Record",
        "The Environment Record that the function was closed over. Used as the outer environment when evaluating the code of the function."
      ],
      [
        "[[PrivateEnvironment]]",
        "a PrivateEnvironment Record or *null*",
        "The PrivateEnvironment Record for Private Names that the function was closed over. *null* if this function is not syntactically contained within a class. Used as the outer PrivateEnvironment for inner classes when evaluating the code of the function."
      ],
      [
        "[[FormalParameters]]",
        "a Parse Node",
        "The root parse node of the source text that defines the function's formal parameter list."
      ],
      [
        "[[ECMAScriptCode]]",
        "a Parse Node",
        "The root parse node of the source text that defines the function's body."
      ],
      [
        "[[ConstructorKind]]",
        "~base~ or ~derived~",
        "Whether or not the function is a derived class constructor."
      ],
      [
        "[[Realm]]",
        "a Realm Record",
        "The realm in which the function was created and which provides any intrinsic objects that are accessed when evaluating the function."
      ],
      [
        "[[ScriptOrModule]]",
        "a Script Record or a Module Record",
        "The script or module in which the function was created."
      ],
      [
        "[[ThisMode]]",
        "~lexical~, ~strict~, or ~global~",
        "Defines how `this` references are interpreted within the formal parameters and code body of the function. ~lexical~ means that `this` refers to the *this* value of a lexically enclosing function. ~strict~ means that the *this* value is used exactly as provided by an invocation of the function. ~global~ means that a *this* value of *undefined* or *null* is interpreted as a reference to the global object, and any other *this* value is first passed to ToObject."
      ],
      [
        "[[Strict]]",
        "a Boolean",
        "*true* if this is a strict function, *false* if this is a non-strict function."
      ],
      [
        "[[HomeObject]]",
        "an Object",
        "If the function uses `super`, this is the object whose [[GetPrototypeOf]] provides the object where `super` property lookups begin."
      ],
      [
        "[[SourceText]]",
        "a sequence of Unicode code points",
        "The source text that defines the function."
      ],
      [
        "[[Fields]]",
        "a List of ClassFieldDefinition Records",
        "If the function is a class, this is a list of Records representing the non-static fields and corresponding initializers of the class."
      ],
      [
        "[[PrivateMethods]]",
        "a List of PrivateElements",
        "If the function is a class, this is a list representing the non-static private methods and accessors of the class."
      ],
      [
        "[[ClassFieldInitializerName]]",
        "a String, a Symbol, a Private Name, or ~empty~",
        "If the function is created as the initializer of a class field, the name to use for NamedEvaluation of the field; ~empty~ otherwise."
      ],
      [
        "[[IsClassConstructor]]",
        "a Boolean",
        "Indicates whether the function is a class constructor. (If *true*, invoking the function's [[Call]] will immediately throw a *TypeError* exception.)"
      ]
    ]
  },
  "table-exportentry-records" : {
    "id" : "table-exportentry-records",
    "header" : [
      "Field Name",
      "Value Type",
      "Meaning"
    ],
    "rows" : [
      [
        "[[ExportName]]",
        "a String or *null*",
        "The name used to export this binding by this module."
      ],
      [
        "[[ModuleRequest]]",
        "a String or *null*",
        "The String value of the |ModuleSpecifier| of the |ExportDeclaration|. *null* if the |ExportDeclaration| does not have a |ModuleSpecifier|."
      ],
      [
        "[[ImportName]]",
        "a String, *null*, ~all~, or ~all-but-default~",
        "The name under which the desired binding is exported by the module identified by [[ModuleRequest]]. *null* if the |ExportDeclaration| does not have a |ModuleSpecifier|. ~all~ is used for `export * as ns from \"mod\"` declarations. ~all-but-default~ is used for `export * from \"mod\"` declarations."
      ],
      [
        "[[LocalName]]",
        "a String or *null*",
        "The name that is used to locally access the exported value from within the importing module. *null* if the exported value is not locally accessible from within the module."
      ]
    ]
  },
  "table-json-serialization-record" : {
    "id" : "table-json-serialization-record",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[ReplacerFunction]]",
        "a function object or *undefined*",
        "A function that can supply replacement values for object properties (from JSON.stringify's _replacer_ parameter)."
      ],
      [
        "[[PropertyList]]",
        "either a List of Strings or *undefined*",
        "The names of properties to include when serializing a non-array object (from JSON.stringify's _replacer_ parameter)."
      ],
      [
        "[[Gap]]",
        "a String",
        "The unit of indentation (from JSON.stringify's _space_ parameter)."
      ],
      [
        "[[Stack]]",
        "a List of Objects",
        "The set of nested objects that are in the process of being serialized. Used to detect cyclic structures."
      ],
      [
        "[[Indent]]",
        "a String",
        "The current indentation."
      ]
    ]
  },
  "table-essential-internal-methods" : {
    "id" : "table-essential-internal-methods",
    "header" : [
      "Internal Method",
      "Signature",
      "Description"
    ],
    "rows" : [
      [
        "[[GetPrototypeOf]]",
        "( ) → Object | Null",
        "Determine the object that provides inherited properties for this object. A *null* value indicates that there are no inherited properties."
      ],
      [
        "[[SetPrototypeOf]]",
        "(Object | Null) → Boolean",
        "Associate this object with another object that provides inherited properties. Passing *null* indicates that there are no inherited properties. Returns *true* indicating that the operation was completed successfully or *false* indicating that the operation was not successful."
      ],
      [
        "[[IsExtensible]]",
        "( ) → Boolean",
        "Determine whether it is permitted to add additional properties to this object."
      ],
      [
        "[[PreventExtensions]]",
        "( ) → Boolean",
        "Control whether new properties may be added to this object. Returns *true* if the operation was successful or *false* if the operation was unsuccessful."
      ],
      [
        "[[GetOwnProperty]]",
        "(_propertyKey_) → Undefined | Property Descriptor",
        "Return a Property Descriptor for the own property of this object whose key is _propertyKey_, or *undefined* if no such property exists."
      ],
      [
        "[[DefineOwnProperty]]",
        "(_propertyKey_, _PropertyDescriptor_) → Boolean",
        "Create or alter the own property, whose key is _propertyKey_, to have the state described by _PropertyDescriptor_. Return *true* if that property was successfully created/updated or *false* if the property could not be created or updated."
      ],
      [
        "[[HasProperty]]",
        "(_propertyKey_) → Boolean",
        "Return a Boolean value indicating whether this object already has either an own or inherited property whose key is _propertyKey_."
      ],
      [
        "[[Get]]",
        "(_propertyKey_, _Receiver_) → any",
        "Return the value of the property whose key is _propertyKey_ from this object. If any ECMAScript code must be executed to retrieve the property value, _Receiver_ is used as the *this* value when evaluating the code."
      ],
      [
        "[[Set]]",
        "(_propertyKey_, _value_, _Receiver_) → Boolean",
        "Set the value of the property whose key is _propertyKey_ to _value_. If any ECMAScript code must be executed to set the property value, _Receiver_ is used as the *this* value when evaluating the code. Returns *true* if the property value was set or *false* if it could not be set."
      ],
      [
        "[[Delete]]",
        "(_propertyKey_) → Boolean",
        "Remove the own property whose key is _propertyKey_ from this object. Return *false* if the property was not deleted and is still present. Return *true* if the property was deleted or is not present."
      ],
      [
        "[[OwnPropertyKeys]]",
        "( ) → List of property keys",
        "Return a List whose elements are all of the own property keys for the object."
      ]
    ]
  },
  "table-cyclic-module-fields" : {
    "id" : "table-cyclic-module-fields",
    "header" : [
      "Field Name",
      "Value Type",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Status]]",
        "~new~, ~unlinked~, ~linking~, ~linked~, ~evaluating~, ~evaluating-async~, or ~evaluated~",
        "Initially ~new~. Transitions to ~unlinked~, ~linking~, ~linked~, ~evaluating~, possibly ~evaluating-async~, ~evaluated~ (in that order) as the module progresses throughout its lifecycle. ~evaluating-async~ indicates this module is queued to execute on completion of its asynchronous dependencies or it is a module whose [[HasTLA]] field is *true* that has been executed and is pending top-level completion."
      ],
      [
        "[[EvaluationError]]",
        "a throw completion or ~empty~",
        "A throw completion representing the exception that occurred during evaluation. *undefined* if no exception occurred or if [[Status]] is not ~evaluated~."
      ],
      [
        "[[DFSIndex]]",
        "an integer or ~empty~",
        "Auxiliary field used during Link and Evaluate only. If [[Status]] is either ~linking~ or ~evaluating~, this non-negative number records the point at which the module was first visited during the depth-first traversal of the dependency graph."
      ],
      [
        "[[DFSAncestorIndex]]",
        "an integer or ~empty~",
        "Auxiliary field used during Link and Evaluate only. If [[Status]] is either ~linking~ or ~evaluating~, this is either the module's own [[DFSIndex]] or that of an \"earlier\" module in the same strongly connected component."
      ],
      [
        "[[RequestedModules]]",
        "a List of Strings",
        "A List of all the |ModuleSpecifier| strings used by the module represented by this record to request the importation of a module. The List is in source text occurrence order."
      ],
      [
        "[[LoadedModules]]",
        "a List of Records with fields [[Specifier]] (a String) and [[Module]] (a Module Record)",
        "A map from the specifier strings used by the module represented by this record to request the importation of a module to the resolved Module Record. The list does not contain two different Records with the same [[Specifier]]."
      ],
      [
        "[[CycleRoot]]",
        "a Cyclic Module Record or ~empty~",
        "The first visited module of the cycle, the root DFS ancestor of the strongly connected component. For a module not in a cycle, this would be the module itself. Once Evaluate has completed, a module's [[DFSAncestorIndex]] is the [[DFSIndex]] of its [[CycleRoot]]."
      ],
      [
        "[[HasTLA]]",
        "a Boolean",
        "Whether this module is individually asynchronous (for example, if it's a Source Text Module Record containing a top-level await). Having an asynchronous dependency does not mean this field is *true*. This field must not change after the module is parsed."
      ],
      [
        "[[AsyncEvaluation]]",
        "a Boolean",
        "Whether this module is either itself asynchronous or has an asynchronous dependency. Note: The order in which this field is set is used to order queued executions, see ."
      ],
      [
        "[[TopLevelCapability]]",
        "a PromiseCapability Record or ~empty~",
        "If this module is the [[CycleRoot]] of some cycle, and Evaluate() was called on some module in that cycle, this field contains the PromiseCapability Record for that entire evaluation. It is used to settle the Promise object that is returned from the Evaluate() abstract method. This field will be ~empty~ for any dependencies of that module, unless a top-level Evaluate() has been initiated for some of those dependencies."
      ],
      [
        "[[AsyncParentModules]]",
        "a List of Cyclic Module Records",
        "If this module or a dependency has [[HasTLA]] *true*, and execution is in progress, this tracks the parent importers of this module for the top-level execution job. These parent modules will not start executing before this module has successfully completed execution."
      ],
      [
        "[[PendingAsyncDependencies]]",
        "an integer or ~empty~",
        "If this module has any asynchronous dependencies, this tracks the number of asynchronous dependency modules remaining to execute for this module. A module with asynchronous dependencies will be executed when this field reaches 0 and there are no execution errors."
      ]
    ]
  },
  "sec-todatestring-day-names" : {
    "id" : "sec-todatestring-day-names",
    "header" : [
      "Number",
      "Name"
    ],
    "rows" : [
      [
        "*+0*𝔽",
        "*\"Sun\"*"
      ],
      [
        "*1*𝔽",
        "*\"Mon\"*"
      ],
      [
        "*2*𝔽",
        "*\"Tue\"*"
      ],
      [
        "*3*𝔽",
        "*\"Wed\"*"
      ],
      [
        "*4*𝔽",
        "*\"Thu\"*"
      ],
      [
        "*5*𝔽",
        "*\"Fri\"*"
      ],
      [
        "*6*𝔽",
        "*\"Sat\"*"
      ]
    ]
  },
  "table-additional-essential-internal-methods-of-function-objects" : {
    "id" : "table-additional-essential-internal-methods-of-function-objects",
    "header" : [
      "Internal Method",
      "Signature",
      "Description"
    ],
    "rows" : [
      [
        "[[Call]]",
        "(any, a List of any) → any",
        "Executes code associated with this object. Invoked via a function call expression. The arguments to the internal method are a *this* value and a List whose elements are the arguments passed to the function by a call expression. Objects that implement this internal method are callable."
      ],
      [
        "[[Construct]]",
        "(a List of any, Object) → Object",
        "Creates an object. Invoked via the `new` operator or a `super` call. The first argument to the internal method is a List whose elements are the arguments of the constructor invocation or the `super` call. The second argument is the object to which the `new` operator was initially applied. Objects that implement this internal method are called constructors. A function object is not necessarily a constructor and such non-constructor function objects do not have a [[Construct]] internal method."
      ]
    ]
  },
  "table-waiterlistrecord" : {
    "id" : "table-waiterlistrecord",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Waiters]]",
        "a List of Waiter Records",
        "The calls to `Atomics.wait` or `Atomics.waitAsync` that are waiting on the location with which this WaiterList is associated."
      ],
      [
        "[[MostRecentLeaveEvent]]",
        "a Synchronize event or ~empty~",
        "The event of the most recent leaving of its critical section, or ~empty~ if its critical section has never been entered."
      ]
    ]
  },
  "table-json-single-character-escapes" : {
    "id" : "table-json-single-character-escapes",
    "header" : [
      "Code Point",
      "Unicode Character Name",
      "Escape Sequence"
    ],
    "rows" : [
      [
        "U+0008",
        "BACKSPACE",
        "`\\\\b`"
      ],
      [
        "U+0009",
        "CHARACTER TABULATION",
        "`\\\\t`"
      ],
      [
        "U+000A",
        "LINE FEED (LF)",
        "`\\\\n`"
      ],
      [
        "U+000C",
        "FORM FEED (FF)",
        "`\\\\f`"
      ],
      [
        "U+000D",
        "CARRIAGE RETURN (CR)",
        "`\\\\r`"
      ],
      [
        "U+0022",
        "QUOTATION MARK",
        "`\\\\\"`"
      ],
      [
        "U+005C",
        "REVERSE SOLIDUS",
        "`\\\\\\\\`"
      ]
    ]
  },
  "table-agent-events-records" : {
    "id" : "table-agent-events-records",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[AgentSignifier]]",
        "an agent signifier",
        "The agent whose evaluation resulted in this ordering."
      ],
      [
        "[[EventList]]",
        "a List of events",
        "Events are appended to the list during evaluation."
      ],
      [
        "[[AgentSynchronizesWith]]",
        "a List of pairs of Synchronize events",
        "Synchronize relationships introduced by the operational semantics."
      ]
    ]
  },
  "table-async-iterator-optional" : {
    "id" : "table-async-iterator-optional",
    "header" : [
      "Property",
      "Value",
      "Requirements"
    ],
    "rows" : [
      [
        "*\"return\"*",
        "a function that returns a promise for an IteratorResult object",
        "The returned promise, when fulfilled, must fulfill with an object that conforms to the IteratorResult interface. Invoking this method notifies the AsyncIterator object that the caller does not intend to make any more `next` method calls to the AsyncIterator. The returned promise will fulfill with an IteratorResult object which will typically have a *\"done\"* property whose value is *true*, and a *\"value\"* property with the value passed as the argument of the `return` method. However, this requirement is not enforced. Additionally, the IteratorResult object that serves as a fulfillment value should have a *\"value\"* property whose value is not a promise (or \"thenable\"). If the argument value is used in the typical manner, then if it is a rejected promise, a promise rejected with the same reason should be returned; if it is a fulfilled promise, then its fulfillment value should be used as the *\"value\"* property of the returned promise's IteratorResult object fulfillment value. However, these requirements are also not enforced."
      ],
      [
        "*\"throw\"*",
        "a function that returns a promise for an IteratorResult object",
        "The returned promise, when fulfilled, must fulfill with an object that conforms to the IteratorResult interface. Invoking this method notifies the AsyncIterator object that the caller has detected an error condition. The argument may be used to identify the error condition and typically will be an exception object. A typical response is to return a rejected promise which rejects with the value passed as the argument. If the returned promise is fulfilled, the IteratorResult fulfillment value will typically have a *\"done\"* property whose value is *true*. Additionally, it should have a *\"value\"* property whose value is not a promise (or \"thenable\"), but this requirement is not enforced."
      ]
    ]
  },
  "table-iterator-interface-required-properties" : {
    "id" : "table-iterator-interface-required-properties",
    "header" : [
      "Property",
      "Value",
      "Requirements"
    ],
    "rows" : [
      [
        "*\"next\"*",
        "a function that returns an IteratorResult object",
        "The returned object must conform to the IteratorResult interface. If a previous call to the `next` method of an Iterator has returned an IteratorResult object whose *\"done\"* property is *true*, then all subsequent calls to the `next` method of that object should also return an IteratorResult object whose *\"done\"* property is *true*. However, this requirement is not enforced."
      ]
    ]
  },
  "table-module-graph-cycle-async-fields-7" : {
    "id" : "table-module-graph-cycle-async-fields-7",
    "header" : [
      "Module",
      "[[DFSIndex]]",
      "[[DFSAncestorIndex]]",
      "[[Status]]",
      "[[AsyncEvaluation]]",
      "[[AsyncParentModules]]",
      "[[PendingAsyncDependencies]]",
      "[[EvaluationError]]"
    ],
    "rows" : [
      [
        "_A_",
        "0",
        "0",
        "~evaluated~",
        "*true*",
        "« »",
        "1 (_B_)",
        "~empty~"
      ],
      [
        "_C_",
        "2",
        "1",
        "~evaluated~",
        "*true*",
        "« _A_ »",
        "0",
        "_C_'s evaluation error"
      ]
    ]
  },
  "table-classstaticblockdefinition-record-fields" : {
    "id" : "table-classstaticblockdefinition-record-fields",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[BodyFunction]]",
        "an ECMAScript function object",
        "The function object to be called during static initialization of a class."
      ]
    ]
  },
  "table-toobject-conversions" : {
    "id" : "table-toobject-conversions",
    "header" : [
      "Argument Type",
      "Result"
    ],
    "rows" : [
      [
        "Undefined",
        "Throw a *TypeError* exception."
      ],
      [
        "Null",
        "Throw a *TypeError* exception."
      ],
      [
        "Boolean",
        "Return a new Boolean object whose [[BooleanData]] internal slot is set to _argument_. See for a description of Boolean objects."
      ],
      [
        "Number",
        "Return a new Number object whose [[NumberData]] internal slot is set to _argument_. See for a description of Number objects."
      ],
      [
        "String",
        "Return a new String object whose [[StringData]] internal slot is set to _argument_. See for a description of String objects."
      ],
      [
        "Symbol",
        "Return a new Symbol object whose [[SymbolData]] internal slot is set to _argument_. See for a description of Symbol objects."
      ],
      [
        "BigInt",
        "Return a new BigInt object whose [[BigIntData]] internal slot is set to _argument_. See for a description of BigInt objects."
      ],
      [
        "Object",
        "Return _argument_."
      ]
    ]
  },
  "table-line-terminator-code-points" : {
    "id" : "table-line-terminator-code-points",
    "header" : [
      "Code Point",
      "Unicode Name",
      "Abbreviation"
    ],
    "rows" : [
      [
        "`U+000A`",
        "LINE FEED (LF)",
        "<LF>"
      ],
      [
        "`U+000D`",
        "CARRIAGE RETURN (CR)",
        "<CR>"
      ],
      [
        "`U+2028`",
        "LINE SEPARATOR",
        "<LS>"
      ],
      [
        "`U+2029`",
        "PARAGRAPH SEPARATOR",
        "<PS>"
      ]
    ]
  },
  "table-candidate-execution-records" : {
    "id" : "table-candidate-execution-records",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[EventsRecords]]",
        "a List of Agent Events Records",
        "Maps an agent to Lists of events appended during the evaluation."
      ],
      [
        "[[ChosenValues]]",
        "a List of Chosen Value Records",
        "Maps ReadSharedMemory or ReadModifyWriteSharedMemory events to the List of byte values chosen during the evaluation."
      ],
      [
        "[[AgentOrder]]",
        "an agent-order Relation",
        "Defined below."
      ],
      [
        "[[ReadsBytesFrom]]",
        "a reads-bytes-from mathematical function",
        "Defined below."
      ],
      [
        "[[ReadsFrom]]",
        "a reads-from Relation",
        "Defined below."
      ],
      [
        "[[HostSynchronizesWith]]",
        "a host-synchronizes-with Relation",
        "Defined below."
      ],
      [
        "[[SynchronizesWith]]",
        "a synchronizes-with Relation",
        "Defined below."
      ],
      [
        "[[HappensBefore]]",
        "a happens-before Relation",
        "Defined below."
      ]
    ]
  },
  "table-cyclic-module-methods" : {
    "id" : "table-cyclic-module-methods",
    "header" : [
      "Method",
      "Purpose"
    ],
    "rows" : [
      [
        "InitializeEnvironment()",
        "Initialize the Environment Record of the module, including resolving all imported bindings, and create the module's execution context."
      ],
      [
        "ExecuteModule( [ _promiseCapability_ ] )",
        "Evaluate the module's code within its execution context. If this module has *true* in [[HasTLA]], then a PromiseCapability Record is passed as an argument, and the method is expected to resolve or reject the given capability. In this case, the method must not throw an exception, but instead reject the PromiseCapability Record if necessary."
      ]
    ]
  },
  "sec-asyncgeneratorrequest-records" : {
    "id" : "sec-asyncgeneratorrequest-records",
    "header" : [
      "Field Name",
      "Value",
      "Meaning"
    ],
    "rows" : [
      [
        "[[Completion]]",
        "a Completion Record",
        "The Completion Record which should be used to resume the async generator."
      ],
      [
        "[[Capability]]",
        "a PromiseCapability Record",
        "The promise capabilities associated with this request."
      ]
    ]
  }
}